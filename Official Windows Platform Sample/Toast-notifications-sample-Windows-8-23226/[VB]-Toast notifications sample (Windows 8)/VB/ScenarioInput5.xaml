<!-- THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF   -->
<!-- ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO -->
<!-- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A      -->
<!-- PARTICULAR PURPOSE.                                                 -->
<!--                                                                     -->
<!-- Copyright (c) Microsoft Corporation. All rights reserved            -->

<Page
  x:Class="ToastsSample.ScenarioInput5"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  d:DesignWidth="1366"
  d:DesignHeight="768">

  <StackPanel>
    <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap">
      <Run>When users click on your toast, dismiss it, or the toast times out, events are raised. You can attach listeners for these events to the toast object.</Run>
      <LineBreak/>
      <LineBreak/>
      <Run>
        In addition, there are two ways to tell if the user clicked on your toast. You can listen to the "Activated" event 
        from either the toast object or the "OnLaunched" event off the Windows.UI.Xaml.Application object. The difference 
        is that the OnLaunched event is raised by toasts that arise from either local or Internet notifications, while the 
        toast object event is raised only by local notifications.
      </Run>
    </TextBlock>
    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
      <Button x:Name="Scenario5DisplayToastWithCallbacks" Content="Display a toast" Margin="0,0,10,0"/>
      <Button x:Name="Scenario5HideToast" Content="Hide last toast from this scenario" Margin="0,0,10,0"/>
    </StackPanel>
  </StackPanel>
</Page>