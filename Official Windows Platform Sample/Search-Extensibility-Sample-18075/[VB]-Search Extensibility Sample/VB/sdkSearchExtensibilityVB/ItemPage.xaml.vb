'
'   Copyright (c) 2011 Microsoft Corporation.  All rights reserved.
'   Use of this sample source code is subject to the terms of the Microsoft license 
'   agreement under which you licensed this sample source code and is provided AS-IS.
'   If you did not accept the terms of the license agreement, you are not authorized 
'   to use this sample source code.  For the terms of the license, please see the 
'   license agreement between you and Microsoft.
'  
'   To see all Code Samples for Windows Phone, visit http://go.microsoft.com/fwlink/?LinkID=219604 
'  
'
Imports System.Windows.Media.Imaging

Partial Public Class ItemPage
    Inherits PhoneApplicationPage
    ' Constructor
    Public Sub New()
        InitializeComponent()

        ' Set the data context of the listbox control to the sample data.
        DataContext = App.ItemViewModel
        AddHandler Loaded, AddressOf ItemPage_Loaded
    End Sub

    ' Load data from the ItemViewModel.
    Private Sub ItemPage_Loaded(ByVal sender As Object, ByVal e As RoutedEventArgs)
        ' Temporary text for the TextBlock that will show the name of the product if available.
        Dim productName As String = "Product not found"

        ' Icon to indicate if the product is recalled.
        Dim iconImage As New BitmapImage()

        ' Specifies that the icon should not be cached or created in the background.
        iconImage.CreateOptions = BitmapCreateOptions.None

        ' Text to describe if the product is recalled.
        Dim caption As String


        ' Loop through the parameters in the Search Extras deep link URI.
        For Each strKey In Me.NavigationContext.QueryString.Keys
            ' Look for the “ProductName” parameter.
            If strKey = "ProductName" Then
                ' Extract the product name. 
                productName = Me.NavigationContext.QueryString(strKey)

                ' Calls helper method to determine if product is recalled.
                If IsRecalled(productName) Then
                    ' Set icon and caption to indicate that product is recalled.
                    iconImage.UriSource = New Uri("X.png", UriKind.Relative)
                    caption = "This product was recently recalled! Proceed with caution!!"
                Else
                    ' Set icon and caption to indicate that the product is not recalled. 
                    iconImage.UriSource = New Uri("Check.png", UriKind.Relative)
                    caption = "No recalls found! You can buy this product with confidence :)"

                End If

                ' Set ViewModel icon and caption to indicate if product is recalled.
                App.ItemViewModel.IconSource = iconImage
                App.ItemViewModel.Caption = caption
            End If
        Next strKey


        ' Bind the product name to the LaunchingParams property.
        App.ItemViewModel.LaunchingParams = productName
    End Sub


    ' Placeholder method for determining if a product is recalled (results are randomly selected).
    Private Function IsRecalled(ByVal productName As String) As Boolean
        ' A pseudo-random number generator, based on the length of the product name.
        Dim rand As New Random(productName.Length)

        '             
        '             * Integer generated by the pseudo-random number generator, 
        '             * bit-shifted by the bitwise operator '&' with the integer 1, 
        '             * to determine if the number is even or odd.
        '             
        Dim test As Integer = rand.Next() And 1


        ' If the random number is odd, product is recalled.
        If test = 1 Then
            Return True
            ' If the random number is even, product is not recalled.
        Else
            Return False
        End If
    End Function

    ' OnNavigatedTo implementation.
    Protected Overrides Sub OnNavigatedTo(ByVal e As System.Windows.Navigation.NavigationEventArgs)
        MyBase.OnNavigatedTo(e)

    End Sub
End Class
