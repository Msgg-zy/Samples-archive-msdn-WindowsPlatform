<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SimpleCommunication.LowLatency"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleCommunication"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                This scenario demonstrates the end-to-end latency of video captured using the Media Capture API and displayed using the video tag with low latency mode enabled. 
                Two output windows are displayed: 1) a camera preview window shows the raw output from your camera 2) a localhost client window. The localhost client window shows 
                the video from the camera when compressed, streamed, and recieved over machine's loopback network interface. This window demonstrates the end-to-end latency of 
                video captured, streamed to, and displayed by a remote client minus network latency.
            </TextBlock>
            <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" Grid.Row="1" Style="{StaticResource BasicTextStyle}" Text="Tap or click the 'Start Preview' button to get started."/>
            <Grid Margin="0,10,0,0" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button x:Name="Preview" Content="Start Preview" Margin="0,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Click="Preview_Click" IsEnabled="False" />
                <Button x:Name="LoopbackClient" Grid.Column="1" Content="Start Loopback Client" Margin="0,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Click="LoopbackClient_Click" IsEnabled="False"/>
                <ToggleSwitch x:Name="LatencyModeToggle" Grid.Column="2" Header="Low Latency Mode" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="False" Toggled="LatencyModeToggle_Toggled" />
            </Grid>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1" Margin="0,0,20,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="CameraPreviewTitle" HorizontalAlignment="Left" Text="Camera Preview" Style="{StaticResource HeaderTextStyle}" Margin="0,0,0,10"></TextBlock>
            <TextBlock x:Name="LocalClientTitle" Grid.Column="1"  HorizontalAlignment="Left" Text="Network Client (Localhost)" Style="{StaticResource HeaderTextStyle}" Margin="0,0,0,10"></TextBlock>
            <Border Grid.Row="1" Margin="0,0,20,0" BorderBrush="Black" BorderThickness="1">
                <Grid>
                    <Image x:Name="PreviewPoster" Source="assets/webcam_preview_poster.png"/>
                    <CaptureElement x:Name="CameraPreview" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" >
                        <CaptureElement.RenderTransform>
                            <CompositeTransform ScaleX="-1"/>
                        </CaptureElement.RenderTransform>
                    </CaptureElement>
                </Grid>
            </Border>

            <Border Grid.Column="1" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                <Grid>
                    <Image x:Name="LocalHostPoster" Source="Assets/localhost_preview_poster.png"/>
                    <MediaElement x:Name="DefaultMediaElement" PosterSource="Assets/localhost_preview_poster.png" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" >
                        <MediaElement.RenderTransform>
                            <CompositeTransform ScaleX="-1"/>
                        </MediaElement.RenderTransform>
                    </MediaElement>
                    <MediaElement x:Name="LowLatencyMediaElement" HorizontalAlignment="stretch" VerticalAlignment="stretch" Visibility="collapsed" RealTimePlayback="True" RenderTransformOrigin="0.5,0.5" >
                        <MediaElement.RenderTransform>
                            <CompositeTransform ScaleX="-1"/>
                        </MediaElement.RenderTransform>
                    </MediaElement>
                </Grid>
            </Border>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
