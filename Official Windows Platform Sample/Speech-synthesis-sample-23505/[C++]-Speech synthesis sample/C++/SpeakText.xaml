<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.VoiceSynthesisCPP.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.VoiceSynthesisCPP"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

  <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="Input" Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
        This sample show cases Voice Synthesis functionality in Windows , using the WinRT Text so speech APIs. Developers can now easily add text to speech functionality to their apps!
      </TextBlock>
      <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
        <Button x:Name="btnSpeak" Content="Speak" Margin="0,0,10,0" Click="BtnSpeak_Click"/>
        <Button x:Name="btnSaveToFile"  Content="Save To File" Margin="0,0,10,0" Click="BtnSaveToFile_Click"/>
        <ComboBox x:Name="listboxVoiceChooser" HorizontalAlignment="Left" Grid.Column="3" Grid.ColumnSpan="2" SelectionChanged="ListboxVoiceChooser_SelectionChanged" Width="200" Height="Auto" Margin="4,2"/>
      </StackPanel>
      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="InputFullScreenLandscape"/>
          <VisualState x:Name="InputFilled"/>
          <VisualState x:Name="InputFullScreenPortrait"/>
          <VisualState x:Name="InputSnapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>

    <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
      <MediaElement Grid.Row="0" x:Name="media" AutoPlay="False" CurrentStateChanged="media_CurrentStateChanged"/>
      <TextBox x:Name="tbData"
               Grid.Row="0"
               Margin="0,25,-666,-126"
               TextWrapping="Wrap"
               AcceptsReturn="True"
               Text="The quick red fox jumped over the lazy brown dog"
               FontSize="25"
               VerticalAlignment="Stretch"
               HorizontalAlignment="Stretch"
               ScrollViewer.HorizontalScrollBarVisibility="Auto"    />
      <!--<Image x:Name="Image1" AutomationProperties.Name="A placeholder image" Source="Assets/placeholder-sdk.png" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top"/>-->
      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="OutputFullScreenLandscape"/>
          <VisualState x:Name="OutputFilled"/>
          <VisualState x:Name="OutputFullScreenPortrait"/>
          <VisualState x:Name="OutputSnapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </Grid>

</common:LayoutAwarePage>
