<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->

<Page
    x:Class="SDKSample.Clipboard.Others"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.Clipboard"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Left">
                <TextBlock x:Name="Description" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" >
                  Your application can register for clipboard update notifications to decide whether to enable Paste
                  operation. Updates occur any time user copies something onto clipboard, or when it's emptied.
                  If the "Register Clipboard Content Change" check box below is checked, a list of available formats
                  on the clipboard will be displayed automatically whenever a clipboard update notification is received.
                  You can also use the "Show Clipboard Formats" button to manually display the current content of the clipboard.
                </TextBlock>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,10,0,0">
                    <Button x:Name="ShowFormatButton" Click="ShowFormatButton_Click" Content="Show Clipboard Formats" Margin="0,0,10,0"/>
                    <Button x:Name="EmptyClipboardButton" Click="EmptyClipboardButton_Click" Content="Empty Clipboard" Margin="0,0,10,0"/>
                    <Button x:Name="ClearOutputButton" Click="ClearOutputButton_Click" Content="Clear Output" Margin="0,0,10,0"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Margin="0,10,0,0">
                    <CheckBox x:Name="RegisterClipboardContentChanged" Click="RegisterClipboardContentChanged_Click" Content="Register Clipboard Content Changed"/>
                </StackPanel>
            </StackPanel>
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputDefaultLayout"/>
                    <VisualState x:Name="InputBelow768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel HorizontalAlignment="Left">
                <TextBlock x:Name ="OutputText" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" />
            </StackPanel>
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputDefaultLayout"/>
                    <VisualState x:Name="OutputBelow768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</Page>