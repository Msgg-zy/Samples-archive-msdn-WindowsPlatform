<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.SDKTemplate.Scenario5"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.SDKTemplate"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel x:Name="Input">
          <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
            In this scenario, the app will update its badge using periodic updates which will poll a web service to 
            retrieve tile XML content.
            <LineBreak/>
            <LineBreak/>
            As with polling for tile updates, your app can poll your web server for badge updates as well. Once your app
            calls the polling API, the system will poll the specified URL on a regular basis and update your badge with
            the returned notification content.
          </TextBlock>
          <TextBlock Style="{StaticResource BasicTextStyle}" FontWeight="Bold" TextWrapping="Wrap" Margin="0,10,0,10">
            Enter a URL to poll, choose a frequency, and press "Start periodic updates"
            to begin polling for badge updates.
          </TextBlock>
          <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
            <TextBlock Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="Server URL:" />
            <TextBox x:Name="BadgePollingURL" Text="http://" Width="500" />
          </StackPanel>
          <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
            <ComboBox x:Name="PeriodicRecurrence" Width="300" Height="50" SelectedIndex="0">
              <TextBlock>Every half-hour</TextBlock>
              <TextBlock>Hourly</TextBlock>
              <TextBlock>Every six hours</TextBlock>
              <TextBlock>Every 12 hours</TextBlock>
              <TextBlock>Daily</TextBlock>
            </ComboBox>
            <Button x:Name="StartBadgePolling" Content="Start periodic updates" Margin="0,0,10,0" Click="StartBadgePolling_Click"/>
            <Button x:Name="StopBadgePolling" Content="Stop periodic updates" Margin="0,0,10,0" Click="StopBadgePolling_Click"/>
          </StackPanel>
        </StackPanel>

        <Grid x:Name="Output" Grid.Row="1">  
            <TextBlock TextWrapping="Wrap" MaxWidth="1000" Style="{StaticResource BasicTextStyle}">
              As you begin and stop periodic updates, the status will appear here.
            </TextBlock>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
