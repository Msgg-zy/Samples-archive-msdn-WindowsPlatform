<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.Tiles.Globalization"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.Tiles"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

<Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel>
                <TextBlock Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap">
                    This scenario demonstrates how to display a different image resource based on the user's current localization, scale and accessibility settings.
                    <LineBreak/>
                    <LineBreak/>                    
                    Windows fully supports localization, scale, and accessibility for web images and packaged text and images. Web images can take advantage of these features by returning specific images depending on the variables encapsulated in a query string. Packaged images and text use the Resource Management System and require no further changes that what your application already does for localization, scale, and accessibility.
                    <LineBreak/>
                    <LineBreak/>
                    For web images, add the optional boolean attribute AddImageQuery to the image, binding, or visual node to have Windows automatically append query strings. The query strings are appended to the image URL provided in the notification payload when the image is requested from the image service. The image service used should respond with the appropriate image based on the parameters supplied in the query string. 
                    <LineBreak/>
                    <LineBreak/>
                    To test what query string will be appended to image URLs, you can easily change the current settings of your system.
                    <LineBreak/>
                    Scale - Make it easier to read in the Ease of Access page in PC Settings
                    <LineBreak/>            
                    High Contrast - High Contrast Theme in the Ease of Access page in PC Settings
                </TextBlock>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource BasicTextStyle}" VerticalAlignment="Center" TextWrapping="Wrap" Text="View the current settings of your PC and preview the query string: " />
                    <Button x:Name="ViewCurrentResources" Content="View current resources" Click="ViewCurrentResources_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource BasicTextStyle}" VerticalAlignment="Center" TextWrapping="Wrap" Text="Send a tile notification with a web image and query strings:" />
                    <TextBox x:Name="ImageUrl" Text="http://" Width="200"/>
                    <Button x:Name="SendTileNotificationWithQueryStrings" Content="Send tile notification with query strings" Click="SendTileNotificationWithQueryStrings_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource BasicTextStyle}" VerticalAlignment="Center" TextWrapping="Wrap" Text="Send tile notifications with packaged resources:" />
                    <Button x:Name="SendTileNotificationImage" Content="Send tile notification with images" Click="SendTileNotificationImage_Click"/>
                    <Button x:Name="SendTileNotificationText" Content="Send tile notification with text" Click="SendTileNotificationText_Click"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <TextBlock x:Name="OutputTextBlock" Text="" TextWrapping="Wrap"  Style="{StaticResource BasicTextStyle}" IsTextSelectionEnabled="True"/>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</common:LayoutAwarePage>
