<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SimpleImaging.ImagingTransforms"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleImaging"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                Use the imaging APIs (Windows.Graphics.Imaging) to read and edit bitmap properties and apply transformations such as scale, crop and rotate.
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                <Button x:Name="OpenButton" Content="Open" MinWidth="90" Click="Open_Click"/>
                <Button x:Name="RotateLeftButton" Content="Rotate left" MinWidth="90" Click="RotateLeft_Click"/>
                <Button x:Name="RotateRightButton" Content="Rotate right" MinWidth="90" Click="RotateRight_Click"/>
                <Button x:Name="SaveButton"  Content="Save" MinWidth="90" Click="Save_Click"/>
                <Button x:Name="SaveAsButton"  Content="Save as" MinWidth="90" Click="SaveAs_Click"/>
                <Button x:Name="CloseButton"  Content="Close" MinWidth="90" Click="Close_Click"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!-- Column 0 contains the output image -->
            <Frame Grid.Column="0" Grid.Row="0" Grid.RowSpan="6" x:Name="ImageViewbox" Width="382" Height="382" Margin="0,0,10,0">
                <Image x:Name="Image1" AutomationProperties.Name="A placeholder image" Source="Assets/placeholder-sdk.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Frame>

            <!-- Columns 1 and 2 contain the imaging properties -->
            <Slider Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" x:Name="ScaleSlider" Width="300" Margin="0,0,10,10" IsEnabled="False" Minimum="10" Maximum="100" TickFrequency="5" TickPlacement="Outside" SnapsTo="Ticks" ValueChanged="ScaleSlider_ValueChanged" />

            <TextBlock Grid.Column="1" Grid.Row="1" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center">Scale:</TextBlock>
            <TextBlock Grid.Column="2" Grid.Row="1" x:Name="ScaleTextblock" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>

            <TextBlock Grid.Column="1" Grid.Row="2" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center">Oriented width:</TextBlock>
            <TextBlock Grid.Column="2" Grid.Row="2" x:Name="WidthTextblock" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>

            <TextBlock Grid.Column="1" Grid.Row="3" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center">Oriented height:</TextBlock>
            <TextBlock Grid.Column="2" Grid.Row="3" x:Name="HeightTextblock" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>

            <TextBlock Grid.Column="1" Grid.Row="4" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center">User rotation:</TextBlock>
            <TextBlock Grid.Column="2" Grid.Row="4" x:Name="UserRotationTextblock" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>

            <TextBlock Grid.Column="1" Grid.Row="5" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center">EXIF orientation:</TextBlock>
            <TextBlock Grid.Column="2" Grid.Row="5" x:Name="ExifOrientationTextblock" Margin="0,0,10,10" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
    </Grid>
        
        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
