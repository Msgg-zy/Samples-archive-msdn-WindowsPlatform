<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="FileAccess.Scenario6"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FileAccess"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" HorizontalAlignment="Left">
                Use the most-recently used (MRU) list to track storage items (like files, folders, etc.) that the user accesses frequently.
                The MRU holds up to 25 items and is maintained by Windows.
                <LineBreak/><LineBreak/>
                Use the future access list (FAL) to preserve access to storage items (like files, folders, etc.) in locations that are not specified by
                the app's capabilities, like items that are accessed through the file picker. The FAL holds up to 1000 items and must be maintained by the app.
                <LineBreak/><LineBreak/>
                To add to a list, select the list and then click 'Add to List'.
                To view the current contents of a list, select the list and then click 'Show List'.
                To open 'sample.dat' from a list, select the list and then click 'Open from List'.
            </TextBlock>

            <StackPanel Grid.Row="1" Orientation="Vertical">
                <RadioButton x:Name="MRURadioButton" Content="Most Recently Used" HorizontalAlignment="Left" GroupName="PersistenceList" IsChecked="True"/>
                <RadioButton x:Name="FALRadioButton" Content="Future Access List" HorizontalAlignment="Left" GroupName="PersistenceList"/>
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Horizontal" x:Name="ButtonsStackPanel">
                <Button x:Name="AddToListButton" Content="Add to List" Margin="0,0,10,0"/>
                <Button x:Name="ShowListButton" Content="Show List" Margin="0,0,10,0"/>
                <Button x:Name="OpenFromListButton" Content="Open from List" Margin="0,0,10,0"/>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ButtonsStackPanel">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Vertical" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InputSnapped">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ButtonsStackPanel">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Vertical" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <TextBlock x:Name="OutputTextBlock" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap"/>
        </Grid>
    </Grid>
</common:LayoutAwarePage>
