<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SimpleCommunication.VideoChat"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleCommunication"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                This scenario demonstrates a simple, end-to-end video call client that demonstrates the low latency mode of WinRT's capture engine 
                and the video tag. The sample uses a custom network source and a custom sink extensions to send and recieve captured audio and video 
                data between 2 computers.
            </TextBlock>
            <Grid Margin="0,10,0,0" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"  Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0" >IP address or hostname of remote PC:</TextBlock>
                <TextBox x:Name="HostName" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap" Margin="0,0,10,0" IsEnabled="False" UseLayoutRounding="True"/>
                <Button x:Name="Call" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="Call" Margin="0,0,10,0" Click="Call_Click" IsEnabled="False"/>
                <Button x:Name="EndCall" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="End Call" Margin="0,0,10,0" Click="EndCall_Click" IsEnabled="False"/>
            </Grid>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1">
            <Image x:Name="CallPoster" AutomationProperties.Name="A placeholder image" Stretch="None" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="Assets/video-call-poster.png" />
            <MediaElement x:Name="RemoteVideo" AudioDeviceType="Communications" PosterSource="Assets/video-call-poster.png" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" RealTimePlayback="True" AudioCategory="Communications" />
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
