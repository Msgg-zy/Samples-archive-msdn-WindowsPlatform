<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.PasswordVaultCPP.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.PasswordVaultCPP"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
	d:DesignWidth="400" >
    

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,-225,0">
                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="This scenario provides an example when an app wishes to allow only one user to store a password.  If a saved credential is found, clicking Launch will log the user in.  If there is no saved credential, a login form will be displayed. This scenario assumes at most one credential is stored, and if multiple are stored, login behavior is undefined. This scenario also demonstrates initializing the PasswordVault asynchronously, for cases in which the first call to the PasswordVault may take a little more time."/>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <Button x:Name="Launch" Content="Launch" Margin="0,0,10,0" Click="Launch_Click"/>
                    <Button x:Name="Signin" Content="Sign in" Click="Signin_Click"/>
                    <Button x:Name="ChangeUser" Content="Change User" Click="ChangeUser_Click"/>
                    <Button x:Name="ResetScenario1" Content="Reset Scenario1" Click="Reset_Click"/>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Canvas VerticalAlignment="Center" Height="40" Margin="10,0,0,0">
                        <TextBox x:Name="WelcomeMessage" HorizontalAlignment="Left" Height="15" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="400" Canvas.Top="10" Canvas.Left="-7" />
                    </Canvas>
                </StackPanel>
            </StackPanel>

        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel Margin="0,0,-98,0">
                <StackPanel Orientation="Vertical">
                    <Canvas VerticalAlignment="Center" Height="40" Margin="10,0,0,0">
                        <CheckBox x:Name="AuthenticationFailCheck" Content ="Yes/No" Canvas.Left="297" Canvas.Top="-10" BorderThickness="10"/>
                        <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Check to cause authentication to fail " VerticalAlignment="Center" Width="272" Canvas.Left="-10" Canvas.Top="10"/>
                    </Canvas>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Canvas VerticalAlignment="Center" Height="40" Margin="10,0,0,0" >
                        <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="User Name : " VerticalAlignment="Center" Width="642" Canvas.Left="-10" Canvas.Top="10"/>
                        <TextBox x:Name="InputUserNameValue" Width="188" Height="30" Canvas.Left="280"/>
                    </Canvas>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Canvas VerticalAlignment="Center" Height="40" Margin="10,0,0,0">
                        <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Password:" VerticalAlignment="Center" Width="642" Canvas.Left="-10" Canvas.Top="10"/>
                        <PasswordBox x:Name="InputPasswordValue" Width="188" Height="30" Canvas.Left="280"/>
                    </Canvas>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Canvas VerticalAlignment="Center" Height="40" Margin="10,0,0,0">
                        <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Check to save your credential : " VerticalAlignment="Center" Width="267" Canvas.Left="-10" Canvas.Top="10"/>
                        <CheckBox x:Name="SaveCredCheck" Content ="Yes/No" Canvas.Left="311" Canvas.Top="-10" BorderThickness="1"/>
                    </Canvas>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Canvas VerticalAlignment="Center" Height="40" Margin="10,0,0,0">
                        <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Message: " VerticalAlignment="Center" Width="642" Canvas.Left="-10" Canvas.Top="10"/>
                        <TextBox x:Name="ErrorMessage" HorizontalAlignment="Left" Height="15" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="398" Canvas.Left="69"/>
                    </Canvas>
                </StackPanel>
            </StackPanel>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</common:LayoutAwarePage>
