<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.SDKTemplate.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.SDKTemplate"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel x:Name="Input">
          <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
            In this scenario, the app will renew its notification channel.
            <LineBreak/>
            <LineBreak/>
            Notification channels expire after 30 days. Every time your app is launched, it should renew your channel 
            and send it to your server to ensure your service always has an updated channel. Requesting a new channel 
            does not revoke previously acquired channels. If your app provides its primary content through its tile and 
            the user is not expected to launch the app frequently, it is recommended that your app consider using a 
            background task to periodically request a new channel in addition to requesting a new channel every time 
            your app is launched.
            <LineBreak/>
            <LineBreak/>
            Note that your app's package will need to set the "Internet (client)" capability in its manifest. 
          </TextBlock>
          <TextBlock Style="{StaticResource BasicTextStyle}" FontWeight="Bold" TextWrapping="Wrap">
            Click the buttons below to renew channels, and manage a background task to renew channels periodically.
          </TextBlock>
          <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
            <Button x:Name="RenewChannelsButton" Content="Renew all channels" Margin="0,0,10,0" Click="RenewChannelsButton_Click"/>
            <Button x:Name="RegisterTaskButton" Content="Register a background task to periodically renew channels" Margin="0,0,10,0" Click="RegisterTaskButton_Click"/>
            <Button x:Name="UnregisterTaskButton" Content="Unregister background task" Margin="0,0,10,0" Click="UnregisterTaskButton_Click"/>
          </StackPanel>
        </StackPanel>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">

        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</common:LayoutAwarePage>
