<!-- THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF   -->
<!-- ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO -->
<!-- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A      -->
<!-- PARTICULAR PURPOSE.                                                 -->
<!--                                                                     -->
<!-- Copyright (c) Microsoft Corporation. All rights reserved            -->

<Page
	x:Class="RawNotificationsSampleCPP.ScenarioInput1"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	d:DesignWidth="1366"
	d:DesignHeight="768">

	<StackPanel>
    <TextBlock TextWrapping="Wrap" Style="{StaticResource DescriptionTextStyle}">
      In this scenario, the app will be set up to receive raw notifications from the cloud by creating a background task.
      <LineBreak/>
      <LineBreak/>
      Raw notifications are a notification type sent through the Windows Push Notification Service (WNS) which can trigger 
      background task code to run when the notification is received by Windows. Raw notifications can only cause your 
      app's background task to activate if your app has been added to the lock screen. See the "Lock Screen Apps" sample 
      for examples of how to request lock screen app permissions.
      <LineBreak/>
      <LineBreak/>
      Once your app is on the lock screen, the push notification can activate a background task that executes your app's
      logic. The background task can include an inspection of the contents of the push notification to perform 
      context-specific actions. Note that your app needs an active push notification channel to receive notifications. 
      You should renew your channel every time the user launches your app -- see the "Push and Periodic Notifications" 
      sample for more information about acquiring and renewing a notification channel. 
      <LineBreak/>
      <LineBreak/>
      Note that your app's package will need to set the "Internet (client)" capability in its manifest.
    </TextBlock>
    <TextBlock TextWrapping="Wrap" Style="{StaticResource H2Style}" Margin="0,10,0,0">
      Click the buttons below to open or close notification channels. Then, have your server or test app
      send a raw notification to that URI.
    </TextBlock>
    <Button x:Name="Scenario1Open" Content="Open a channel and register background task" Margin="0,0,10,0" Click="Scenario1Open_Click"/>
    <Button x:Name="Scenario1Unregister" Content="Unregister background task" Margin="0,0,10,0" Click="Scenario1Unregister_Click"/>
  </StackPanel>
</Page>
