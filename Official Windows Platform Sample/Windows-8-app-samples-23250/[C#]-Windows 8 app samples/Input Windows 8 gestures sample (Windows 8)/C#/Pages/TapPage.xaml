<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<controls:GesturePageBase
    x:Class="GesturesApp.Pages.TapPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:GesturesApp.Pages"
    xmlns:controls="using:GesturesApp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- Resources for sizing touch targets according to the guidelines -->
        <x:Double x:Key="TouchTargetCramSizeMm">5</x:Double>
        <x:Double x:Key="TouchTargetCramSizeDIP">18.897637795</x:Double>
        <x:Double x:Key="TouchTargetMinSizeMm">7</x:Double>
        <x:Double x:Key="TouchTargetMinSizeDIP">26.456692913</x:Double>
        <x:Double x:Key="TouchTargetAccurateSizeMm">9</x:Double>
        <x:Double x:Key="TouchTargetAccurateSizeDIP">34.015748031</x:Double>

        <Style x:Key="TapButtonStyle" TargetType="ButtonBase">         
            <Setter Property="MinWidth" Value="{Binding Width}"/>
            <Setter Property="MinHeight" Value="{Binding Height}"/>
            <Setter Property="MaxWidth" Value="{Binding Width}"/>
            <Setter Property="MaxHeight" Value="{Binding Height}"/>
            <Setter Property="Width" Value="{StaticResource TouchTargetAccurateSizeDIP}"/>
            <Setter Property="Height" Value="{StaticResource TouchTargetAccurateSizeDIP}"/>
            <Setter Property="Margin" Value="3.779527559"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid>

                            <Rectangle
                                x:Name="UncheckedBackground"
                                IsHitTestVisible="True"
                                Fill="{StaticResource AppBlueBrush}"
                                Opacity="0"/>

                            <Rectangle 
                                x:Name="CheckedBackground"
                                IsHitTestVisible="True"
                                Fill="{StaticResource AppOrangeBrush}"
                                Opacity="1"/>

                            <Rectangle
                                x:Name="FocusVisualWhite"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="1.5"/>
                            <Rectangle
                                x:Name="FocusVisualBlack"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="0.5"/>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="UncheckedBackground"/>
                                            <PointerDownThemeAnimation TargetName="CheckedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="CheckedBackground" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="UncheckedBackground" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>                               
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonSizes">
                                    <VisualState x:Name="Cram">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetCramSizeDIP}" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width"/>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetCramSizeDIP}" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Height"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Min">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetMinSizeDIP}" Storyboard.TargetProperty="Width"/>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetMinSizeDIP}" Storyboard.TargetProperty="Height"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Accurate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TapRadioButtonStyle" TargetType="ButtonBase">      
            <Setter Property="Width" Value="140"/>
            <Setter Property="Margin" Value="3.779527559"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid>
                            
                            <Rectangle
                                x:Name="UncheckedBackground"
                                IsHitTestVisible="True"
                                Fill="{StaticResource AppBlueBrush}"
                                Opacity="0"/>
                            
                            <Rectangle
                                x:Name="CheckedBackground"
                                IsHitTestVisible="True"
                                Fill="#06c"
                                Opacity="1"/>

                            <ContentPresenter Content="{TemplateBinding Content}" Margin="5" />

                            <Rectangle
                                x:Name="FocusVisualWhite"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="1.5"/>
                            <Rectangle
                                x:Name="FocusVisualBlack"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="0.5"/>                 
                            
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="UncheckedBackground"/>
                                            <PointerDownThemeAnimation TargetName="CheckedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>                                
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="CheckedBackground" Storyboard.TargetProperty="Opacity"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="UncheckedBackground" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonSizes">
                                    <VisualState x:Name="Cram">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetCramSizeDIP}" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width"/>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetCramSizeDIP}" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Height"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Min">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetMinSizeDIP}" Storyboard.TargetProperty="Width"/>
                                            <DoubleAnimation Duration="0" To="{StaticResource TouchTargetMinSizeDIP}" Storyboard.TargetProperty="Height"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Accurate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <Grid>        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <StackPanel
            Grid.Column="0"
            Orientation="Vertical">
    
            <TextBlock
                Text="Recommended target size"
                Style="{StaticResource AppSubtitleTextStyle}"/>

            <TextBlock Style="{StaticResource AppContentTextStyle}" Margin="0,20,0,0">
                Large touch targets are easy to hit accurately, and increase user confidence in the app.
                Smaller targets can lead to errors and frustration. However, we can't make all objects really large,
                so selecting a target size is a trade-off between ease of use and on-screen layout.
                The following guidance is designed to help you make that decision.
                <LineBreak/><LineBreak/>
                In most cases,  we recommend targets of at least 7mm (40px by 40px).
                If accuracy is really important, use targets of at least 9mm (50px by 50px).
                If errors are easy to correct, like with radio buttons, it might be ok to use targets of at least 5 mm (30px by 30px).
                <LineBreak/><LineBreak/>
                Padding between targets is just as important as target size, and we recommend always using at least 2mm padding (10 px).
            </TextBlock>
        </StackPanel>
        
        <Grid Grid.Column="2">
        
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
                       
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0">
                <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="tap00" Style="{StaticResource TapButtonStyle}"/>
                    <CheckBox x:Name="tap01" Style="{StaticResource TapButtonStyle}"/>
                    <CheckBox x:Name="tap02" Style="{StaticResource TapButtonStyle}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="tap10" Style="{StaticResource TapButtonStyle}"/>
                    <CheckBox x:Name="tap11" Style="{StaticResource TapButtonStyle}"/>
                    <CheckBox x:Name="tap12" Style="{StaticResource TapButtonStyle}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="tap20" Style="{StaticResource TapButtonStyle}"/>
                    <CheckBox x:Name="tap21" Style="{StaticResource TapButtonStyle}"/>
                    <CheckBox x:Name="tap22" Style="{StaticResource TapButtonStyle}"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <RadioButton
                    Click="OnChangeTapButtonSize" Tag="TouchTargetCramSizeDIP"
                    Style="{StaticResource TapRadioButtonStyle}">
                    
                    <RadioButton.Content>
                        <StackPanel Orientation="Vertical">
                            <TextBlock
                                Text="Cram to fit"
                                Style="{StaticResource AppContentTextStyle}" 
                                HorizontalAlignment="Center"
                                Margin="0,0,0,5"/>

                            <TextBlock
                                Text="5mm x 5mm (30px x 30px)"
                                Style="{StaticResource AppSmallContentTextStyle}"
                                HorizontalAlignment="Center"/>
                        </StackPanel>
                    </RadioButton.Content>
                </RadioButton>
            
                <RadioButton
                    Click="OnChangeTapButtonSize" Tag="TouchTargetMinSizeDIP"
                    Style="{StaticResource TapRadioButtonStyle}">
                    
                    <RadioButton.Content>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Minimum"
                                       Style="{StaticResource AppContentTextStyle}" 
                                       HorizontalAlignment="Center"
                                       Margin="0,0,0,5"/>

                            <TextBlock Text="7mm x 7mm (40px x 40px)"
                                       Style="{StaticResource AppSmallContentTextStyle}" 
                                       HorizontalAlignment="Center"/>
                        </StackPanel>
                    </RadioButton.Content>
                </RadioButton>
                
                <RadioButton
                    Click="OnChangeTapButtonSize" Tag="TouchTargetAccurateSizeDIP"
                    IsChecked="True"
                    Style="{StaticResource TapRadioButtonStyle}">
                    
                    <RadioButton.Content>
                        <StackPanel Orientation="Vertical">
                            <TextBlock
                                Text="Accuracy"
                                Style="{StaticResource AppContentTextStyle}" 
                                HorizontalAlignment="Center"
                                Margin="0,0,0,5"/>
                            
                            <TextBlock 
                                Text="9mm x 9mm (50px x 50px)"
                                Style="{StaticResource AppSmallContentTextStyle}" 
                                HorizontalAlignment="Center"/>
                        </StackPanel>
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>
        </Grid>
    </Grid>
</controls:GesturePageBase>
