<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="Clipboard.Others"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Clipboard"
    xmlns:common="using:Clipboard.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Left">
                <TextBlock x:Name="Description" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" >
                        Your application can register for clipboard update notifications to decide whether to enable Paste 
                        operation. Updates occur any time user copies something onto clipboard, or when it's emptied.
                        In this scenario, you will see a list of all available formats on clipboard. If check box is checked, 
                        the list will appear automatically whenever clipboard update notification is received. Otherwise, use "Show Clipboard Formats" button.
                </TextBlock>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,10,0,0">
                    <Button x:Name="ShowFormatButton" Click="ShowFormatButton_Click" Content="Show Clipboard Formats" Margin="0,0,10,0"/>
                    <Button x:Name="EmptyClipboardButton" Click="EmptyClipboardButton_Click" Content="Empty Clipboard" Margin="0,0,10,0"/>
                    <Button x:Name="ClearOutputButton" Click="ClearOutputButton_Click" Content="Clear Output" Margin="0,0,10,0"/>                    
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Margin="0,10,0,0">
                    <CheckBox x:Name="RegisterClipboardContentChanged" Click="RegisterClipboardContentChanged_Click" Content="Register Clipboard Content Changed"/>
                </StackPanel>
            </StackPanel>    
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel HorizontalAlignment="Left">
                <TextBlock x:Name ="OutputText" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" />
                <TextBlock x:Name ="DisplayFormatOutputText" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" />
            </StackPanel>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</common:LayoutAwarePage>
