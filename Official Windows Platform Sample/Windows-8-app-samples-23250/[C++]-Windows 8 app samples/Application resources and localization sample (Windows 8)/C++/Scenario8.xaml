<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SDKSample.ApplicationResources.Scenario8"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.ApplicationResources"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                Applications are automatically set to the most appropriate language(s) supported by the app and preferred by the user. 
The application does not have to call any APIs. Resources, fonts and DOM properties are all set using this application-specific language(s). 
Applications can retrieve their current language(s) if necessary for communication with other systems through the ResourceContext object. 
Some applications may also want to be able to specifically set their application language(s) to something other than the one(s) based on the user's preferred language.
Applications can make a call to change their application language persistently.&#10;
Note, application language settings UI is best exposed within the Settings charm and not directly on the app canvas. &#10;
Choose below to persistently set the preferred application language.
            </TextBlock>

            <TextBlock Text="To change the default context language, choose the language below and click Show Message." Grid.Row="1" TextWrapping="Wrap"  Style="{StaticResource BasicTextStyle}"></TextBlock>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400" />
                    <ColumnDefinition Width="400" />
                </Grid.ColumnDefinitions>
                <ComboBox Margin="10, 10, 0, 13" Grid.Column="0"  SelectedValuePath="Tag" Name="Scenario8ComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="106" Height="34" >
                    <ComboBoxItem Tag=""></ComboBoxItem>
                    <ComboBoxItem Tag="en">English</ComboBoxItem>
                    <ComboBoxItem Tag="ja">Japanese</ComboBoxItem>
                </ComboBox>
                <Button x:Name="Scenario8Button_Show" Grid.Column="1" Content="Show Message" Click="Scenario8Button_Show_Click" Margin="0,0,10,0"/>
            </Grid>


        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource BasicTextStyle}" x:Name="Scenario8TextBlock" FontSize="20" TextWrapping="Wrap" />
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
