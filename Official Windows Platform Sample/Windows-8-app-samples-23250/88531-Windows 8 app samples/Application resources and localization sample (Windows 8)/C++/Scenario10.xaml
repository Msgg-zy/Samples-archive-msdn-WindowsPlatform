<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SDKSample.ApplicationResources.Scenario10"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.ApplicationResources"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Margin="0,0,0,20"  Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                Resources can depend on many different dimensions, including scale, language and
contrast. The resource management system does appropriate fallback behavior to retrieve
the most appropriate resource for the current context. The resource qualifiers are
evaluated in a priority based system (e.g., language is more important than scale).
Application developers are encouraged to mark resources as appropriately as possible.
Only resources that are appropriate for all contexts should be left without any
qualifiers. Default resources are qualified resources that are chosen if no resource
matches the context. The default language can be set by manually editing the .csproj file in a text editor.
            </TextBlock>
            <TextBlock x:Name="InputTextBlock2" Margin="0,0,0,20"  Grid.Row="1" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
This sample shows a list of string resources and the ordered set of resource candidates
for different languages, scales, etc. Various contexts can be simulated with the
drop-down below to see which resources are matched in various situations. Each candidate
has additional metadata that can used to determine why it was chosen.
            </TextBlock>

            <StackPanel   Grid.Row="2" >
                <TextBlock Text="To view a resource that has been loaded inline in a different combination of qualifiers, choose the qualifier value below and click Show Message. &#10; &#10;" TextWrapping="Wrap"  Style="{StaticResource BasicTextStyle}"/>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"  Grid.Row="0"  Text="Language"/>
                    <ComboBox Grid.Column="0" SelectedValuePath="Tag" SelectedIndex="0"  Grid.Row="1" Name="Scenario10ComboBox_Language" >
                        <ComboBoxItem Tag="en-GB">English (United Kingdom)</ComboBoxItem>
                        <ComboBoxItem Tag="en-US">English (United States)</ComboBoxItem>
                        <ComboBoxItem Tag="fr-FR">French (France)</ComboBoxItem>
                        <ComboBoxItem Tag="fr-CA">French (Canada)</ComboBoxItem>
                        <ComboBoxItem Tag="de-DE">German (Germany)</ComboBoxItem>
                    </ComboBox>
                    <TextBlock Grid.Column="1"  Grid.Row="0"  Text="Scale"/>
                    <ComboBox Grid.Column="1" SelectedIndex="0" SelectedValuePath="Content" Grid.Row="1" Name="Scenario10ComboBox_Scale" >
                        <ComboBoxItem Content="100"></ComboBoxItem>
                        <ComboBoxItem Content="140"></ComboBoxItem>
                        <ComboBoxItem Content="180"></ComboBoxItem>
                    </ComboBox>

                    <TextBlock Grid.Column="2"  Grid.Row="0"  Text="Contrast"/>
                    <ComboBox Grid.Column="2" SelectedIndex="0"  Grid.Row="1" SelectedValuePath="Content" Name="Scenario10ComboBox_Contrast" >
                        <ComboBoxItem Content="standard"></ComboBoxItem>
                        <ComboBoxItem Content="white"></ComboBoxItem>
                        <ComboBoxItem Content="black"></ComboBoxItem>
                    </ComboBox>
                    <TextBlock Grid.Column="3"  Grid.Row="0"  Text="HomeRegion"/>
                    <ComboBox Grid.Column="3" SelectedValuePath="Tag" SelectedIndex="0"   Grid.Row="1" Name="Scenario10ComboBox_HomeRegion" >
                        <ComboBoxItem Tag="001">World</ComboBoxItem>
                        <ComboBoxItem Tag="019">Americas</ComboBoxItem>
                        <ComboBoxItem Tag="142">Asia</ComboBoxItem>
                        <ComboBoxItem Tag="021">Northern America</ComboBoxItem>
                        <ComboBoxItem Tag="419">Latin America and the Caribbean</ComboBoxItem>
                        <ComboBoxItem Tag="840">United States of America</ComboBoxItem>
                    </ComboBox>
                    <Button x:Name="Scenario10Button_Show" Grid.Column="4"  Grid.Row="1"  Content="Show Message" Click="Scenario10Button_Show_Click"  Margin="0,0,10,0"/>
                </Grid>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource BasicTextStyle}" x:Name="Scenario10TextBlock" FontSize="20" TextWrapping="Wrap" />
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
