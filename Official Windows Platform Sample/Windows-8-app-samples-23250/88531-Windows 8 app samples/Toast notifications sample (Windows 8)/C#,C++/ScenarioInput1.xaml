<!-- THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF   -->
<!-- ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO -->
<!-- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A      -->
<!-- PARTICULAR PURPOSE.                                                 -->
<!--                                                                     -->
<!-- Copyright (c) Microsoft Corporation. All rights reserved            -->

<Page
	x:Class="ToastsSampleCPP.ScenarioInput1"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	d:DesignWidth="1366"
	d:DesignHeight="768">

    <StackPanel>
        <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap">
      In this scenario, the app will show how to raise a toast notification by calling local notification APIs.
      <LineBreak/>
      <LineBreak/>
      Toast notifications interrupt your users with important, actionable events. Toast notifications can be sent by 
      your app when it is running, scheduled for a later time, or be sent by your app's cloud service through the Windows 
      Push Notification Service (WNS). Toast notifications are described by an XML schema that binds tile contents to 
      system-defined templates. Toast should be actionable but ignorable. If a user misses a toast notification, the 
      app should consider updating the tile or tile badge with information about the missed toast notification.
        </TextBlock>
        <TextBlock Style="{StaticResource H4Style}" TextWrapping="Wrap">
      Press one of the buttons below to see an example of that toast:"
        </TextBlock>
        <StackPanel Orientation="Vertical" Margin="0,10,0,0">
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <Button x:Name="Scenario1DisplayToastText01" Content="ToastText01" Margin="0,0,10,0"/>
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="A single string wrapped across three lines of text" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <Button x:Name="Scenario1DisplayToastText02" Content="ToastText02" Margin="0,0,10,0"/>
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="One string of bold text, and one string of regular text wrapped across two lines" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <Button x:Name="Scenario1DisplayToastText03" Content="ToastText03" Margin="0,0,10,0"/>
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="One string of bold text wrapped across two lines, and a string of regular text on the third line" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <Button x:Name="Scenario1DisplayToastText04" Content="ToastText04" Margin="0,0,10,0"/>
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="One string of bold text on the first line, and two strings of regular text on the second and third lines" />
            </StackPanel>
        </StackPanel>
        <StackPanel Margin="0,10,0,0">
            <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="Since notifications are just XML, you can create them in many different ways. Above, the NotificationsExtensions library is used. You can also create notifications with strings."/>
            <StackPanel Orientation="Horizontal">
                <Button x:Name="Scenario1DisplayToastText01String" Content="ToastText01"/>
                <Button x:Name="Scenario1DisplayToastText02String" Content="ToastText02"/>
                <Button x:Name="Scenario1DisplayToastText03String" Content="ToastText03"/>
                <Button x:Name="Scenario1DisplayToastText04String" Content="ToastText04"/>
            </StackPanel>
        </StackPanel>
    </StackPanel>
</Page>
