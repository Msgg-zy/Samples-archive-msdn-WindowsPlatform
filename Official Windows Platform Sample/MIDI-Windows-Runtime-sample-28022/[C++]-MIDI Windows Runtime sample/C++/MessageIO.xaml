<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.MIDI.MessageIO"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:$rootsnamespace$"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
              This scenario demonstrates how to open MIDI ports as well as send and receive messages.  To open a MIDI in or out port, select one or multiple from the 'MIDI In Ports' and 'MIDI Out Ports' lists below.  Close the port by unselecting from the list.
                <LineBreak/><LineBreak/>
              To send a message, first make sure at least one out port is open.  Then construct your message using the drop-downs.  When done, tap the send button.
                <LineBreak/>
              To receive a message, first make sure at least one in port is open.  As MIDI messages are received they will appear in the 'Received MIDI Messages' section.
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,0,0,0">
                    MIDI In Ports
                    </TextBlock>
                    <ListBox x:Name="InPortsList" SelectionChanged="InPortsListSelectionChanged" SelectionMode="Extended" Height="140" Width="300" Margin="0,0,0,0"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock x:Name="lblOutProperties" HorizontalAlignment="Left" Margin="20,0,0,0" FontSize="16">
                      MIDI Out Ports
                    </TextBlock>
                    <ListBox x:Name="OutPortsList" SelectionChanged="OutPortsListSelectionChanged" SelectionMode="Extended" Height="140" Width="300" HorizontalAlignment="Left" Margin="20,0,0,0"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Grid.Row="1">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,0,0,0">
                            Send MIDI Message
                        </TextBlock>
                        <TextBlock x:Name="lblMessageType" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,0,0,0" />
                        <ComboBox x:Name="cmbMessageType" Width="300" Margin="0,0,0,0" SelectionChanged="MessageTypeSelectionChanged" IsEnabled="False"/>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" />
                        <TextBlock x:Name="lblField1" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" />
                        <ComboBox x:Name="cmbField1" Width="100" Margin="10,0,0,0" IsEnabled="False" Visibility="Collapsed" SelectionChanged="Field1ComboBoxSelectionChanged"/>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" />
                        <TextBlock x:Name="lblField2" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" />
                        <ComboBox x:Name="cmbField2" Width="100" Margin="10,0,0,0" IsEnabled="False" Visibility="Collapsed" SelectionChanged="Field2ComboBoxSelectionChanged"/>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" />
                        <TextBlock x:Name="lblField3" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" />
                        <ComboBox x:Name="cmbField3" Width="100" Margin="10,0,0,0" IsEnabled="False" Visibility="Collapsed" SelectionChanged="Field3ComboBoxSelectionChanged"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                    <StackPanel Width="310">
                        <TextBlock x:Name="lblRawBuffer" Text="Raw SysEx Message Buffer" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" Visibility="Collapsed"/>
                        <TextBlock Text="{Binding ElementName=SendMessageTextBox, Path=Text}" Style="{StaticResource BasicTextStyle}" Tapped="RawMessageTextBlockTapped" Margin="10,0,0,0">
                            <FlyoutBase.AttachedFlyout>
                                <Flyout>
                                    <TextBox x:Name="SendMessageTextBox" />
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel>
                        <Button x:Name="btnReset" Click="ResetButtonClick" IsEnabled="False">Reset</Button>
                    </StackPanel>
                    <StackPanel>
                        <Button x:Name="btnSend" Click="SendButtonClick" IsEnabled="False">Send</Button>
                    </StackPanel>
                </StackPanel>
                <StackPanel>
                    <TextBlock HorizontalAlignment="Left" Margin="0,10,0,0" FontSize="16" Text="Received MIDI Messages"/>
                    <ListBox x:Name="listMessageOutput" Height="230" Width="550" HorizontalAlignment="Left" Margin="0,10,0,0"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</common:LayoutAwarePage>
