<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<common:LayoutAwarePage
    x:Class="SDKSample.MIDI.DeviceProperties"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:$rootsnamespace$"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    
    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
              This scenario demonstrates how to enumerate MIDI ports and query properties.  Also, it provides an implementation for a MIDI port device watcher to monitor port arrival and removal.  The Device watcher is enabled by default.  You can toggle this setting with the 'Monitor Ports' switch.
            </TextBlock>
            <StackPanel Margin="0,0,0,0" Grid.Row="2">
                <ToggleSwitch Toggled="TogglePortMonitor" Header="Monitor Ports" IsOn="True"/>
                <Button x:Name="btnEnumeratePorts" Click="EnumeratePorts" Content="Enumerate" Margin="0,0,0,0"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
          <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Grid.Row="1">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,0,0,0">
                          MIDI In Ports
                        </TextBlock>
                        <ListBox x:Name="InPortsList" SelectionChanged="InPortsListSelectionChanged" MaxHeight="140" Width="550" Margin="0,0,0,0"/>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock x:Name="lblInProperties" HorizontalAlignment="Left" Margin="5,0,0,0" FontSize="16">
                          Properties
                        </TextBlock>
                        <ListBox x:Name="InPropertiesList" Height="140" Width="550" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                    </StackPanel>
                </StackPanel>
            <StackPanel>
              <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Grid.Row="1">
                <StackPanel>
                  <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,5,0,0">
                    MIDI Out Ports
                  </TextBlock>
                  <ListBox x:Name="OutPortsList" SelectionChanged="OutPortsListSelectionChanged" MaxHeight="140" Width="550" Margin="0,0,0,0"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock x:Name="lblOutProperties" HorizontalAlignment="Left" Margin="5,5,0,0" FontSize="16">
                      Properties
                    </TextBlock>
                    <ListBox x:Name="OutPropertiesList" Height="140" Width="550" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                </StackPanel>
              </StackPanel>
            </StackPanel>
            </StackPanel>
          </Grid>

      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</common:LayoutAwarePage>
