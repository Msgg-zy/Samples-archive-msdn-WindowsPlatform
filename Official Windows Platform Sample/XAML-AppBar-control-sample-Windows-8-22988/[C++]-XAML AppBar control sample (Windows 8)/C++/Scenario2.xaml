<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="AppBarControl.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppBarControl"
    xmlns:common="using:AppBarControl.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel>
                <TextBlock TextWrapping="Wrap"  Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
            AppBars can be made "sticky", which simply means that are not dismissed via "light dismiss".  Light dismiss
            means that performing any action (touch, mouse, and so forth) outside of the AppBar will dismiss it.  Making an
            AppBar sticky will keep an AppBar visible on the screen until an edge gesture, right-click, or Windows + Z key 
            combination occurs.  To make an AppBar sticky, simply set the IsSticky property to true.
                </TextBlock>
                <TextBlock TextWrapping="Wrap"  Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,10,0,0">
            To exercise this scenario, bring up the AppBar as in Scenario1 and then tap or click outside of the AppBar
            and notice that it is dismissed (that is, it is not sticky).  Now select IsSticky below and bring
            up the AppBar again.  Tap or click outside of the AppBar and notice that it is NOT dismissed (that is, it is sticky).
            Now perform the edge gesture, right-click, or Windows + Z, and notice that the AppBar is dismissed.
                </TextBlock>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <CheckBox x:Name="IsSticky" Content="IsSticky" Margin="0,0,10,0" Click="IsSticky_Click"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <TextBlock x:Name="Message" Text="See AppBar below when activated" Style="{StaticResource BasicTextStyle}"/>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</common:LayoutAwarePage>
