<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="ApplicationResources.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ApplicationResources"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" Margin="0,0,0,10"  TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                 Images and other file resources can be loaded based on scale factor, high contrast mode, user language and other dimensions. All
            file references in XAML and code can be virtualized to pick up the most appropriate
            image based on the current context of the application.
            </TextBlock>
            <TextBlock x:Name="InputTextBlock2" Grid.Row="1" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                Note that each of the Images in the output references a logical image
            (images/projector.png), but loads a physical image in the package (images/en/projector.scale-100_contrast-standard.png).
            The physical files can be qualified with folder names (e.g. en-US/) and/or filenames
            (e.g. name.contrast-high.png).
            </TextBlock>
            <TextBlock x:Name="InputTextBlock3" Grid.Row="2" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
            To see a different image, follow the instructions below and re-run the application.
            </TextBlock>
            <TextBlock x:Name="InputTextBlock4" Grid.Row="3" Margin="10,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                To change the user language preference, Desktop Control Panel &gt; Clock, Language,
                and Region &gt; Language &gt; Add a language that is supported by the app (English, or Japanese) &gt; Move the new language to the top of the list.
            </TextBlock>
            <TextBlock x:Name="InputTextBlock5" Grid.Row="4" Margin="10,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                To change the scale factor, use the Visual Studio simulator
            </TextBlock>
            <TextBlock x:Name="InputTextBlock6" Grid.Row="5" Margin="10,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                To change contrast, go to PC settings &gt; Ease of Access &gt; Turn on "High Contrast"
            </TextBlock>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <Image x:Name="Scenario2Image" Source="Images/projector.png"  HorizontalAlignment="Left" Height="80" Width="80"  Stretch="UniformToFill" />
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</common:LayoutAwarePage>
