<!-- THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF   -->
<!-- ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO -->
<!-- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A      -->
<!-- PARTICULAR PURPOSE.                                                 -->
<!--                                                                     -->
<!-- Copyright (c) Microsoft Corporation. All rights reserved            -->

<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vsm="using:Windows.UI.Xaml">

  <!--
    ******************************************************************
    COMMON CONTROL PROPERTIES
    ******************************************************************
    -->
  <FontFamily x:Key="ContentFontFamily">Segoe UI</FontFamily>
  <FontFamily x:Key="SemiBoldContentFontFamily">Segoe UI SemiBold</FontFamily>
  <FontFamily x:Key="SemilightContentFontFamily">Segoe UI Semilight</FontFamily>
  <FontFamily x:Key="SymbolFontFamily">Segoe UI Symbol</FontFamily>
  <FontFamily x:Key="LightContentFontFamily">Segoe UI Light</FontFamily>

  <x:Double x:Key="ContentFontSize">14.667</x:Double>
  <x:Double x:Key="TooltipContentFontSize">17.667</x:Double>
  <x:Double x:Key="SmallContentFontSize">13.333</x:Double>
  <x:Double x:Key="SemilightContentFontSize">14.667</x:Double>
  <x:Double x:Key="CheckBoxContentFontSize">16</x:Double>
  <x:Double x:Key="FontGlyphFontSize">16</x:Double>
  <x:Double x:Key="ControlStrokeThickness">2</x:Double>
  <x:Double x:Key="ListViewItemCheckmarkFontSize">20</x:Double>
  <x:Double x:Key="HeaderMediumFontSize">26.667</x:Double>
  <Thickness x:Key="ControlBorderThickness">2</Thickness>

  <!--
    ******************************************************************
    COMMON CONTROL COLORS
    ******************************************************************
    -->

  <Color x:Key="ControlPressedTextColor">#FFFFFFFF</Color>
  <Color x:Key="ControlDisabledTextColor">#7C212121</Color>
  <Color x:Key="CheckBoxDisabledGlyphColor">#7C272727</Color>
  <Color x:Key="RadioButtonDisabledGlyphColor">#842A2A2A</Color>
  <Color x:Key="HyperlinkRestColor">#FF26A0DA</Color>
  <Color x:Key="HyperlinkMouseOverColor">#FF3891B6</Color>
  <Color x:Key="HyperlinkPressedTextColor">#FFFFFFFF</Color>
  <Color x:Key="HyperlinkVisitedColor">#FF6DA2C0</Color>
  <Color x:Key="HyperlinkDisabledColor">#FF707070</Color>
  <Color x:Key="ScrollBarTrackColor">#91D5D5D5</Color>
  <Color x:Key="ControlRestTextColor">#AA000000</Color>
  <Color x:Key="ControlGlyphColor">#FF212121</Color>
  <Color x:Key="ControlNormalFillColor">White</Color>
  <Color x:Key="InputControlDisabledColor">#26000000</Color>
  <Color x:Key="ScrollBarGlyphArrowPressedColor">White</Color>
  <Color x:Key="TextBoxFocusFillColor">White</Color>
  <Color x:Key="TextBoxMouseOverFillColor">#DDFFFFFF</Color>
  <Color x:Key="TextBoxMouseOverStrokeColor">#70000000</Color>
  <Color x:Key="TextBoxPressedGlyphColor">White</Color>
  <Color x:Key="TextBoxDisabledColor">#7CFFFFFF</Color>
  <Color x:Key="TextBoxDisabledFillColor">Transparent</Color>
  <Color x:Key="TextBoxButtonHoverFillColor">#FFDEDEDE</Color>
  <Color x:Key="ControlFocusColor">White</Color>
  <Color x:Key="SelectedInlineBackgroundDisabledColor">#00FFFFFF</Color>

  <Color x:Key="ToggleSwitchDisabledBrush">#1E000000</Color>
  <Color x:Key="ToggleSwitchDisabledOuterBorderBrush">#33000000</Color>
  <Color x:Key="ToggleSwitchDisabledInnerBorderBrush">#1E000000</Color>
  <Color x:Key="ToggleSwitchDisabledKnobFillBrush">#FFA3A3A3</Color>

  <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#B3B6B6B6"/>
  <SolidColorBrush x:Key="TextBoxTextBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="TextBoxRestFillBrush" Color="#CCFFFFFF"/>
  <SolidColorBrush x:Key="TextBoxRestBorderBrush" Color="#45000000"/>
  <SolidColorBrush x:Key="TextBoxGlyphBrush" Color="#FF2A2A2A"/>
  <SolidColorBrush x:Key="TextBoxRestStrokeBrush" Color="#45000000"/>
  <SolidColorBrush x:Key="TextBoxFocusFillBrush" Color="White"/>
  <SolidColorBrush x:Key="TextBoxFocusStrokeBrush" Color="#A3000000"/>
  <SolidColorBrush x:Key="TextBoxGlyphHoverFillBrush" Color="#FFDEDEDE"/>
  <SolidColorBrush x:Key="TextBoxGlyphPressedFillBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ControlHighlightBrush" Color="#FF26A0DA"/>
  <SolidColorBrush x:Key="ControlNormalFillBrush" Color="White"/>
  <SolidColorBrush x:Key="ControlForegroundBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ControlMouseOverFillBrush" Color="#D1CDCDCD"/>
  <SolidColorBrush x:Key="ControlPressedFillBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ControlNormalStrokeBrush" Color="#B3B6B6B6"/>
  <SolidColorBrush x:Key="ControlMouseOverStrokeBrush" Color="#D1CDCDCD"/>
  <SolidColorBrush x:Key="ControlPressedStrokeBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ControlBorderBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ControlDisabledBrush" Color="#7C212121"/>
  <SolidColorBrush x:Key="ControlDisabledFillBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="ControlTransparentFillBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="ControlGlyphBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="InputControlDisabledBrush" Color="#26000000"/>
  <SolidColorBrush x:Key="InputControlDisabledFillBrush" Color="#7CCACACA"/>
  <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="White"/>
  <SolidColorBrush x:Key="TooltipBorderBrush" Color="#7C6E6E6E"/>
  <SolidColorBrush x:Key="TooltipForegroundBrush" Color="#FF707070"/>
  <SolidColorBrush x:Key="HyperlinkRestColorBrush" Color="#FF26A0DA"/>
  <SolidColorBrush x:Key="HyperlinkPressedFillBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ScrollIndicatorFillBrush" Color="#BFEDEDED"/>
  <SolidColorBrush x:Key="ProgressBarFillBrush" Color="#FF369ACA"/>
  <SolidColorBrush x:Key="ProgressBarTrackBrush" Color="#2B000000"/>
  <SolidColorBrush x:Key="ScrollBarFaceBrush" Color="#DDC8C8C8"/>
  <SolidColorBrush x:Key="ScrollBarShadowBrush" Color="#49555555"/>
  <SolidColorBrush x:Key="ScrollBarTrackBrush" Color="#91D5D5D5"/>
  <SolidColorBrush x:Key="ScrollBarGlyphArrowBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="MouseScrollBarShadowBrush" Color="#7F555555"/>
  <SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ScrollBarMouseOverFillBrush" Color="#F4FFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarMouseOverStrokeBrush" Color="#D6A6A6A6"/>
  <SolidColorBrush x:Key="ScrollBarArrowPressedBrush" Color="White"/>
  <SolidColorBrush x:Key="SelectMouseOverBrush" Color="#FFDEDEDE"/>
  <SolidColorBrush x:Key="ListViewItemMouseOverBrush" Color="#FFDEDEDE" />
  <SolidColorBrush x:Key="ListViewItemPlaceholderRectBrush" Color="#FF3D3D3D" />
  <SolidColorBrush x:Key="ListViewItemSemiTransparentHighlightBrush" Color="#9926A0DA" />
  <SolidColorBrush x:Key="ListViewItemVeryTransparentHighlightBrush" Color="#7F26A0DA" />
  <SolidColorBrush x:Key="ListViewItemSelectedMouseOverBrush" Color="#FF5AB7E3" />
  <SolidColorBrush x:Key="ControlHeaderBrush" Color="#CCFFFFFF"/>
  <SolidColorBrush x:Key="ListBoxItemMouseOverBrush" Color="#FFDEDEDE"/>
  <SolidColorBrush x:Key="ListBoxItemHighlightBrush" Color="#FF26A0DA"/>
  <SolidColorBrush x:Key="ListBoxItemPressedBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="LBDisabledBorderBrush" Color="#7CFFFFFF"/>
  <SolidColorBrush x:Key="LBDisabledBackgroundBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="LBFocusedBackgroundBrush" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="LBNormalBackgroundBrush" Color="#CCFFFFFF"/>
  <SolidColorBrush x:Key="LBDisabledFontBrush" Color="#7CFFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarGlyphArrowPressedBrush" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ScrollBarButtonPressedBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ScrollBarThumbFillBrush" Color="#DEC8C8C8"/>
  <SolidColorBrush x:Key="ScrollBarThumbBorderBrush" Color="#80555555"/>
  <SolidColorBrush x:Key="ScrollBarThumbMouseOverFillBrush" Color="#E5DBDBDB"/>
  <SolidColorBrush x:Key="ScrollBarThumbMouseOverBorderBrush" Color="#9E969696"/>
  <SolidColorBrush x:Key="ScrollBarThumbPressedFillBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ScrollBarThumbPressedBorderBrush" Color="#91D5D5D5"/>
  <SolidColorBrush x:Key="ScrollBarButtonMouseOverFillBrush" Color="#F6DBDBDB"/>
  <SolidColorBrush x:Key="ScrollBarButtonMouseOverBorderBrush" Color="#D6A6A6A6"/>
  <SolidColorBrush x:Key="ScrollBarButtonPressedFillBrush" Color="#FF212121"/>
  <SolidColorBrush x:Key="ScrollBarButtonPressedBorderBrush" Color="#91D5D5D5"/>

  <!--Brushes defined here are Light theme specific and are only found in generic.xaml-->
  <SolidColorBrush x:Key="LightControlBorderBrush" Color="#44000000"/>
  <SolidColorBrush x:Key="LightPopUpBorderBrush" Color="#A3000000"/>
  <SolidColorBrush x:Key="LightComboBoxDisabledBrush" Color="#7CCACACA"/>
  <SolidColorBrush x:Key="LightComboBoxDisabledBorderBrush" Color="#26000000"/>
  <SolidColorBrush x:Key="ToggleSwitchKnobFillBrush" Color="Black"/>

  <Style x:Key="SelectedItemCountStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="FontSize" Value="56"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontWeight" Value="Light"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
    <Setter Property="Margin" Value="12,0,0,0"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
    <Setter Property="TextTrimming" Value="WordEllipsis"/>
  </Style>
  <Style x:Key="GridViewGroupHeaderStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ControlHeaderBrush}"/>
    <Setter Property="FontSize" Value="{StaticResource HeaderMediumFontSize}"/>
    <Setter Property="FontFamily" Value="{StaticResource LightContentFontFamily}"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <Setter Property="Margin" Value="0,0,0,10"/>
    <!--Setter Property="TextTrimming" Value="WordEllipsis"/-->
  </Style>

  <!-- Default style for TextBlock -->
  <Style TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
  </Style>

  <!-- Default style for RichTextBlock -->
  <Style TargetType="RichTextBlock">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
  </Style>

  <!-- Default style for Button -->
  <Style TargetType="Button">
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
    <Setter Property="MinWidth" Value="94"/>
    <Setter Property="MinHeight" Value="36"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="Padding" Value="12,4,12,5"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlPressedTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlDisabledTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="3">
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlMouseOverFillBrush}" Opacity="0" BorderBrush="{StaticResource ControlMouseOverStrokeBrush}"/>
              <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Opacity="0" BorderBrush="{StaticResource ControlPressedStrokeBrush}"/>
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlDisabledFillBrush}" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource ControlDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for RepeatButton -->
  <Style TargetType="RepeatButton">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{StaticResource ScrollBarGlyphArrowBrush}"/>
    <Setter Property="Padding" Value="5"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed" />
                    <ColorAnimation Duration="0" To="{StaticResource ScrollBarGlyphArrowPressedColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarMouseOverFillBrush}" Opacity="0" Stroke="{StaticResource ScrollBarMouseOverStrokeBrush}"/>
            <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarPressedBrush}" Opacity="0" Stroke="{StaticResource ScrollBarTrackBrush}"/>
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ToggleButton -->
  <Style TargetType="ToggleButton">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="MinWidth" Value="50"/>
    <Setter Property="MinHeight" Value="38"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource SemiBoldContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="Padding" Value="12,3,12,5"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlPressedTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlDisabledTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedBorder"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="3">
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlMouseOverFillBrush}" Margin="0" Opacity="0" BorderBrush="{StaticResource ControlNormalStrokeBrush}"/>
              <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Margin="0" Opacity="0" BorderBrush="{StaticResource ControlNormalStrokeBrush}"/>
              <Border x:Name="CheckedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Margin="0" Opacity="0" BorderBrush="{StaticResource ControlNormalStrokeBrush}"/>
              <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlDisabledFillBrush}" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource ControlDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for HyperlinkButton -->
  <Style TargetType="HyperlinkButton">
    <Setter Property="Foreground" Value="{StaticResource HyperlinkRestColorBrush}"/>
    <Setter Property="Padding" Value="2"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="HyperlinkButton">
          <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Left" VerticalAlignment="Top">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource HyperlinkMouseOverColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource HyperlinkPressedTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Visited">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource HyperlinkVisitedColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource HyperlinkDisabledColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="PressedBorder" BorderThickness="2,3,2,3" Opacity="0" Background="{StaticResource HyperlinkPressedFillBrush}" BorderBrush="{StaticResource HyperlinkPressedFillBrush}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for RadioButton -->
  <Style TargetType="RadioButton">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="MinHeight" Value="50"/>
    <Setter Property="MinWidth" Value="100"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Padding" Value="5,4,0,0"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="27"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.87" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalEllipse" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalEllipse" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledEllipse" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalEllipse" />
                    <ColorAnimation Duration="0" To="{StaticResource CheckBoxDisabledGlyphColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="CheckGlyph" />
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="RadioButtonElement" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse x:Name="NormalEllipse" Margin="0" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="{StaticResource ControlStrokeThickness}" Fill="{StaticResource ControlNormalFillBrush}" Stroke="{StaticResource ControlBorderBrush}" Opacity="0.35"/>
                <Ellipse x:Name="DisabledEllipse" Margin="0" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" StrokeThickness="{StaticResource ControlStrokeThickness}" Fill="{StaticResource InputControlDisabledFillBrush}" Stroke="{StaticResource InputControlDisabledBrush}"/>
                <Ellipse x:Name="CheckGlyph" Margin="0" Stroke="{StaticResource ControlGlyphBrush}" StrokeThickness="0" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" Fill="{StaticResource ControlGlyphBrush}"/>
              </Grid>
              <Rectangle x:Name="FocusVisualWhite" Stroke="White" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"  Width="27" Height="27"/>
              <Rectangle x:Name="FocusVisualBlack" Stroke="Black" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"  Width="27" Height="27"/>
            </Grid>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for CheckBox -->
  <Style TargetType="CheckBox">
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{StaticResource LightControlBorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="MinHeight" Value="50"/>
    <Setter Property="MinWidth" Value="100"/>
    <Setter Property="Padding" Value="5,4,0,0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="27"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.87" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledBorder" />
                    <ColorAnimation Duration="0" To="{StaticResource CheckBoxDisabledGlyphColor}" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="CheckGlyph" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder" />
                    <ColorAnimation Duration="0" To="{StaticResource CheckBoxDisabledGlyphColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndeterminateGlyph" />
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="IndeterminateGlyph" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="CheckBoxElement">
              <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Border x:Name="NormalBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="21" Background="{StaticResource ControlNormalFillBrush}" Opacity="0.8"/>
                <Border x:Name="DisabledBorder" BorderBrush="{StaticResource InputControlDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="21" Opacity="0" Background="{StaticResource InputControlDisabledFillBrush}"/>
                <Path x:Name="CheckGlyph" Data="M2,14.5 L9.4,14.275 L6.7,2" Margin="7.391,-1.104,2.208,5.567" Stroke="{StaticResource ControlGlyphBrush}" UseLayoutRounding="False" RenderTransformOrigin="0.5,0.5" StrokeThickness="3.5" Opacity="0">
                  <Path.RenderTransform>
                    <CompositeTransform Rotation="50" TranslateX="-1.2655634455537914" TranslateY="0.9440101007599484"/>
                  </Path.RenderTransform>
                </Path>
                <Rectangle x:Name="IndeterminateGlyph" Width="9" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ControlGlyphBrush}" Opacity="0"/>
              </Grid>
              <Rectangle x:Name="FocusVisualWhite" Stroke="White" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"  Width="27" Height="27"/>
              <Rectangle x:Name="FocusVisualBlack" Stroke="Black" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"  Width="27" Height="27"/>
            </Grid>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ContentControl -->
  <Style TargetType="ContentControl">
    <Setter Property="Foreground" Value="#FF000000"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <ContentPresenter
              Content="{TemplateBinding Content}"
              ContentTemplate="{TemplateBinding ContentTemplate}"
              Margin="{TemplateBinding Padding}"
              ContentTransitions="{TemplateBinding ContentTransitions}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ContentPresenter -->
  <Style TargetType="ContentPresenter">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>

  <!-- Default style for TextBox -->
  <Style TargetType="TextBox">
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="Background" Value="{StaticResource TextBoxRestFillBrush}"/>
    <Setter Property="MinHeight" Value="36"/>
    <Setter Property="Foreground" Value="{StaticResource TextBoxTextBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxRestBorderBrush}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
    <Setter Property="Padding" Value="10,5,6,4"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid x:Name="RootElement">
            <Grid.Resources>
              <Style x:Name="DeleteButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource TextBoxRestFillBrush}"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="MinWidth" Value="30"/>
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxRestFillBrush}"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid x:Name="DeleteGlyph">
                        <vsm:VisualStateManager.VisualStateGroups>
                          <vsm:VisualStateGroup x:Name="CommonStates">
                            <vsm:VisualState x:Name="Normal"/>
                            <vsm:VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverGlyphBorder1" />
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Pressed">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedGlyphBorder1" />
                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="DeleteIcon" />
                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="DeleteIcon" />
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="grid" />
                              </Storyboard>
                            </vsm:VisualState>
                          </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="MouseOverGlyphBorder1" BorderBrush="White" BorderThickness="1" Background="{StaticResource TextBoxGlyphHoverFillBrush}" Opacity="0"/>
                        <Border x:Name="PressedGlyphBorder1" BorderBrush="White" BorderThickness="1" Background="{StaticResource TextBoxGlyphPressedFillBrush}" Opacity="0"/>
                        <Grid x:Name="grid" HorizontalAlignment="Center">
                          <Path x:Name="DeleteIcon" Data="F1M68,76L75,69L68,62L70,60L77,67L84,60L86,62L79,69L86,76L84,78L77,71L70,78z" Fill="{StaticResource TextBoxGlyphBrush}" Height="18" Stroke="{StaticResource TextBoxGlyphBrush}" Canvas.Left="68" Stretch="Fill" Canvas.Top="60" Width="18"/>
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxMouseOverFillColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxMouseOverStrokeColor}" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxDisabledFillColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxDisabledColor}" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                    <ColorAnimation Duration="0" To="Red" Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="ReadOnly"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualState x:Name="Unfocused"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="ValidationStates">
                <vsm:VisualState x:Name="InvalidUnfocused"/>
                <vsm:VisualState x:Name="InvalidFocused"/>
                <vsm:VisualState x:Name="Valid"/>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalBorder" BorderThickness="{TemplateBinding BorderThickness}"  Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"/>
            <Border x:Name="FocusBorder" BorderThickness="{TemplateBinding BorderThickness}"  Opacity="0" Background="{StaticResource TextBoxFocusFillBrush}" BorderBrush="{StaticResource TextBoxFocusStrokeBrush}" Grid.ColumnSpan="2"/>
            <Grid Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ScrollViewer x:Name="ContentElement"
                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              Padding="{TemplateBinding Padding}"
                              Foreground="{TemplateBinding Foreground}"
                              BorderThickness="0"
                              IsTabStop="False"
                              ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" />
              <Button x:Name="DeleteButton" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Grid.Column="1" Height="32" Margin="0" Width="30" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for PasswordBox -->
  <Style TargetType="PasswordBox">
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="Background" Value="{StaticResource TextBoxRestFillBrush}"/>
    <Setter Property="MinHeight" Value="36"/>
    <Setter Property="Foreground" Value="{StaticResource TextBoxTextBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxRestBorderBrush}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
    <Setter Property="Padding" Value="10,2,6,4"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="PasswordBox">
          <Grid x:Name="RootElement">
            <Grid.Resources>
              <Style x:Name="RevealButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource TextBoxRestFillBrush}"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="MinWidth" Value="30"/>
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxRestFillBrush}"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid x:Name="DeleteGlyph">
                        <vsm:VisualStateManager.VisualStateGroups>
                          <vsm:VisualStateGroup x:Name="CommonStates">
                            <vsm:VisualState x:Name="Normal"/>
                            <vsm:VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverGlyphBorder1" />
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Pressed">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedGlyphBorder1" />
                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="RevealIcon" />
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Disabled" />
                          </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="MouseOverGlyphBorder1" Background="{StaticResource TextBoxGlyphHoverFillBrush}" Opacity="0" />
                        <Border x:Name="PressedGlyphBorder1" BorderBrush="White" BorderThickness="1" Background="{StaticResource TextBoxGlyphPressedFillBrush}" Opacity="0"/>
                        <Grid x:Name="grid" Width="14" Height="14" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                          <Ellipse x:Name="RevealIcon" Fill="{StaticResource TextBoxGlyphBrush}" Stroke="{StaticResource TextBoxGlyphBrush}" StrokeThickness="2.5"/>
                          <Ellipse Fill="#FFEBEBEB" Stroke="{StaticResource TextBoxGlyphBrush}" StrokeThickness="2.5" Width="10" Height="10"/>
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxMouseOverFillColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxMouseOverStrokeColor}" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxDisabledFillColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                    <ColorAnimation Duration="0" To="{StaticResource TextBoxDisabledColor}" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="ReadOnly"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualState x:Name="Unfocused"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="ValidationStates">
                <vsm:VisualState x:Name="InvalidUnfocused"/>
                <vsm:VisualState x:Name="InvalidFocused"/>
                <vsm:VisualState x:Name="Valid"/>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalBorder" BorderThickness="{TemplateBinding BorderThickness}"  Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"/>
            <Border x:Name="FocusBorder" BorderThickness="{TemplateBinding BorderThickness}"  Opacity="0" Background="{StaticResource TextBoxFocusFillBrush}" BorderBrush="{StaticResource TextBoxFocusStrokeBrush}" Grid.ColumnSpan="2"/>
            <Grid Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ScrollViewer x:Name="ContentElement"
                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              Padding="{TemplateBinding Padding}"
                              Foreground="{TemplateBinding Foreground}"
                              BorderThickness="0"
                              IsTabStop="False"
                              ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" />
              <Button x:Name="RevealButton" IsTabStop="False" Style="{StaticResource RevealButtonStyle}" Grid.Column="1" Height="32" Margin="0" Width="30" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Thumb -->
  <Style TargetType="Thumb">
    <Setter Property="Background" Value="#FF1F3B53"/>
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0"/>
          <GradientStop Color="#FF8399A9" Offset="0.375"/>
          <GradientStop Color="#FF718597" Offset="0.375"/>
          <GradientStop Color="#FF617584" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Thumb">
          <Grid>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                    <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused"/>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
              <Grid Background="{TemplateBinding Background}"  Margin="1">
                <Border Opacity="0"  x:Name="BackgroundAnimation" Background="#FF448DCA" />
                <Rectangle x:Name="BackgroundGradient" >
                  <Rectangle.Fill>
                    <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                      <GradientStop Color="#FFFFFFFF" Offset="0" />
                      <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                      <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                      <GradientStop Color="#C6FFFFFF" Offset="1" />
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
              </Grid>
            </Border>
            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
            <Rectangle x:Name="FocusVisualElement" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Slider -->
  <Style TargetType="Slider">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Background" Value="Black" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Slider">
          <Grid x:Name="Root" ManipulationMode="TranslateX">
            <Grid.Resources>
              <SolidColorBrush x:Key="SliderTrackDecreaseNormalFill" Color="#FF369ACA"/>
              <SolidColorBrush x:Key="SliderTrackIncreaseNormalFill" Color="#6DCECECE"/>
              <ControlTemplate x:Key="SliderThumbTemplate">
                <Rectangle Fill="{StaticResource ControlGlyphBrush}" />
              </ControlTemplate>
            </Grid.Resources>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimation Duration="0"
                                    Storyboard.TargetName="HorizontalDecreaseRect"
                                    Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                    To="#FF5AB7E3" />
                    <ColorAnimation Duration="0"
                                    Storyboard.TargetName="HorizontalOverlayRect"
                                    Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                    To="#6DCECECE" />
                    <ColorAnimation Duration="0"
                                    Storyboard.TargetName="VerticalDecreaseRect"
                                    Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                    To="#FF5AB7E3" />
                    <ColorAnimation Duration="0"
                                    Storyboard.TargetName="VerticalOverlayRect"
                                    Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                    To="#6DCECECE" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" Storyboard.TargetName="HorizontalDecreaseRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#3D000000" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="HorizontalOverlayRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#1A000000" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="VerticalDecreaseRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#3D000000" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="VerticalOverlayRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#1A000000" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="(RepeatButton.Background).(SolidColorBrush.Color)" To="#7D212121" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="(RepeatButton.Background).(SolidColorBrush.Color)" To="#7D212121" />
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Opacity" To="0.49"/>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Opacity" To="0.49"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Duration="0" Storyboard.TargetName="HorizontalDecreaseRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#FF37A9E3" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="HorizontalOverlayRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#5EA5A5A5" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="VerticalDecreaseRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#FF37A9E3" />
                    <ColorAnimation Duration="0" Storyboard.TargetName="VerticalOverlayRect" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#5EA5A5A5" />
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>

            <Grid x:Name="HorizontalTemplate">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <Rectangle Grid.Row="1" x:Name="HorizontalDecreaseRect" Fill="{StaticResource SliderTrackDecreaseNormalFill}" Grid.Column="0"/>
              <Rectangle x:Name="HorizontalOverlayRect" Grid.Row="1" Fill="{StaticResource SliderTrackIncreaseNormalFill}" Grid.Column="0" Grid.ColumnSpan="3" />
              <TickBar Fill="{TemplateBinding Background}" Grid.Row="0" x:Name="PrimaryHorizontalTickBar" Height="11" Grid.Column="0" Grid.ColumnSpan="3" />
              <TickBar Fill="{TemplateBinding Background}" Grid.Row="2" Visibility="Collapsed" x:Name="SecondaryHorizontalTickBar" Height="11" Grid.Column="0" Grid.ColumnSpan="3" />
              <Thumb Grid.Row="1" x:Name="HorizontalThumb" DataContext="{TemplateBinding Value}" Height="11" Width="11" Grid.Column="1" IsTabStop="True" Template="{StaticResource SliderThumbTemplate}" Background="White" />
            </Grid>

            <Grid x:Name="VerticalTemplate" Visibility="Collapsed">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>

              <Rectangle Grid.Column="1" x:Name="VerticalDecreaseRect" Fill="{StaticResource SliderTrackDecreaseNormalFill}" Grid.Row="2"/>
              <Rectangle x:Name="VerticalOverlayRect" Grid.Column="1" Fill="{StaticResource SliderTrackIncreaseNormalFill}" Grid.Row="0" Grid.RowSpan="3" />
              <TickBar Fill="{TemplateBinding Background}" Grid.Column="0" x:Name="PrimaryVerticalTickBar" Width="11" Grid.Row="0" Grid.RowSpan="3" />
              <TickBar Fill="{TemplateBinding Background}" Grid.Column="2" Visibility="Collapsed" x:Name="SecondaryVerticalTickBar" Width="11" Grid.Row="0" Grid.RowSpan="3" />
              <Thumb Grid.Column="1" x:Name="VerticalThumb" DataContext="{TemplateBinding Value}" Width="11" Height="11" Grid.Row="1" IsTabStop="True" Template="{StaticResource SliderThumbTemplate}" Background="White" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ProgressBar -->
  <Style TargetType="ProgressBar">
    <Setter Property="Foreground" Value="{StaticResource ProgressBarFillBrush}"/>
    <Setter Property="Background" Value="{StaticResource ProgressBarTrackBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Maximum" Value="100"/>
    <Setter Property="Height" Value="6"/>
    <Setter Property="MaxWidth" Value="1376"/>
    <Setter Property="MinWidth" Value="100"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ProgressBar">
          <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate"/>
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimation Storyboard.TargetName="EllipseGrid"
                                        Duration="0:0:3.917"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                        From="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition}"
                                        To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="E1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="E2">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="E3">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="E4">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="E5">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="B1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="B2">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="B3">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="B4">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="B5">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateRoot"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="DeterminateRoot"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Error">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Paused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.5" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="ProgressBarRootGrid">
              <Grid x:Name="IndeterminateRoot"
                      Opacity="0">
                <Grid x:Name="EllipseGrid">
                  <Grid.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </Grid.RenderTransform>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="B1"
                          Grid.Column="8"
                          RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </Border.RenderTransform>
                    <Ellipse x:Name="E1"
                                Fill="{TemplateBinding Foreground}"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                RenderTransformOrigin="0.5,0.5">
                      <Ellipse.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform/>
                          <SkewTransform/>
                          <RotateTransform/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </Ellipse.RenderTransform>
                    </Ellipse>
                  </Border>
                  <Rectangle Grid.Column="7"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                  <Border x:Name="B2"
                          Grid.Column="6"
                          RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </Border.RenderTransform>
                    <Ellipse x:Name="E2"
                                Fill="{TemplateBinding Foreground}"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                RenderTransformOrigin="0.5,0.5">
                      <Ellipse.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform/>
                          <SkewTransform/>
                          <RotateTransform/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </Ellipse.RenderTransform>
                    </Ellipse>
                  </Border>
                  <Rectangle Grid.Column="5"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                  <Border x:Name="B3"
                          Grid.Column="4"
                          RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </Border.RenderTransform>
                    <Ellipse x:Name="E3"
                                Fill="{TemplateBinding Foreground}"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                RenderTransformOrigin="0.5,0.5">
                      <Ellipse.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform/>
                          <SkewTransform/>
                          <RotateTransform/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </Ellipse.RenderTransform>
                    </Ellipse>
                  </Border>
                  <Rectangle Grid.Column="3"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                  <Border x:Name="B4"
                          Grid.Column="2"
                          RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </Border.RenderTransform>
                    <Ellipse x:Name="E4"
                                Fill="{TemplateBinding Foreground}"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                RenderTransformOrigin="0.5,0.5">
                      <Ellipse.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform/>
                          <SkewTransform/>
                          <RotateTransform/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </Ellipse.RenderTransform>
                    </Ellipse>
                  </Border>
                  <Rectangle Grid.Column="1"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                  <Border x:Name="B5"
                          Grid.Column="0"
                          RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </Border.RenderTransform>
                    <Ellipse x:Name="E5"
                                Fill="{TemplateBinding Foreground}"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                RenderTransformOrigin="0.5,0.5">
                      <Ellipse.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform/>
                          <SkewTransform/>
                          <RotateTransform/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </Ellipse.RenderTransform>
                    </Ellipse>
                  </Border>
                </Grid>
              </Grid>
              <Grid x:Name="DeterminateRoot">
                <Border Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}">
                  <Rectangle x:Name="ProgressBarIndicator"
                              Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="Left" />
                </Border>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ScrollViewer -->
  <Style TargetType="ScrollViewer">
    <Setter Property="HorizontalScrollMode" Value="Rails" />
    <Setter Property="VerticalScrollMode" Value="Rails" />
    <Setter Property="ZoomMode" Value="Enabled" />
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ScrollingIndicatorStates">
                <VisualState x:Name="NoIndicator">
                  <Storyboard>
                    <FadeOutThemeAnimation BeginTime="0" Storyboard.TargetName="ScrollBarSeparator" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TouchIndicator">
                  <Storyboard>
                    <FadeOutThemeAnimation Storyboard.TargetName="ScrollBarSeparator" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseIndicator">
                  <Storyboard>
                    <FadeInThemeAnimation Storyboard.TargetName="ScrollBarSeparator" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="{TemplateBinding Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                      Grid.RowSpan="2"
                                      Grid.ColumnSpan="2"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Margin="{TemplateBinding Padding}" />
              <ScrollBar x:Name="VerticalScrollBar"
                          Grid.Column="1"
                          IsTabStop="False"
                          Maximum="{TemplateBinding ScrollableHeight}"
                          Margin="1,0,0,0"
                          Orientation="Vertical"
                          Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                          Value="{TemplateBinding VerticalOffset}"
                          ViewportSize="{TemplateBinding ViewportHeight}"
                          HorizontalAlignment="Right"/>
              <ScrollBar x:Name="HorizontalScrollBar"
                          IsTabStop="False"
                          Maximum="{TemplateBinding ScrollableWidth}"
                          Margin="0,1,0,0"
                          Orientation="Horizontal"
                          Grid.Row="1"
                          Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                          Value="{TemplateBinding HorizontalOffset}"
                          ViewportSize="{TemplateBinding ViewportWidth}" />
              <Rectangle x:Name="ScrollBarSeparator" Grid.Row="1" Grid.Column="1" Margin="1,1,0,0" StrokeThickness="0">
                <Rectangle.Fill>
                  <SolidColorBrush Color="{StaticResource ScrollBarTrackColor}"/>
                </Rectangle.Fill>
              </Rectangle>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ScrollBar -->
  <Style TargetType="ScrollBar">
    <Setter Property="MinWidth" Value="17"/>
    <Setter Property="MinHeight" Value="17"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollBar">
          <Grid x:Name="Root">
            <Grid.Resources>
              <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root" Background="Transparent">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed" />
                          <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ArrowPressed" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarButtonMouseOverFillBrush}" Stroke="{StaticResource ScrollBarButtonMouseOverBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path Data="M4.1183305,0 L9.6730003,5.4663525 L4.1183305,10.944 L0,10.881266 L5.5553346,5.4719901 L0,0.062734604 z" Fill="{StaticResource ScrollBarGlyphArrowBrush}" StrokeThickness="0" Height="10.944" Width="9.673" Stretch="Fill" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                  <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarButtonPressedFillBrush}" Stroke="{StaticResource ScrollBarButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path x:Name="ArrowPressed" Data="M4.1183305,0 L9.6730003,5.4663525 L4.1183305,10.944 L0,10.881266 L5.5553346,5.4719901 L0,0.062734604 z" Fill="{StaticResource ScrollBarGlyphArrowPressedBrush}" StrokeThickness="0" Height="10.944" Width="9.673" Stretch="Fill" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" Opacity="0"/>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                          <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ArrowPressed"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarButtonMouseOverFillBrush}" Stroke="{StaticResource ScrollBarButtonMouseOverBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path Data="M5.5546699,0 L9.6730003,0.062734604 L4.1176658,5.4720101 L9.6730003,10.881266 L5.5546699,10.944 L0,5.4776478 z" Fill="{StaticResource ScrollBarGlyphArrowBrush}" StrokeThickness="0" Height="10.944" Width="9.673" Stretch="Fill" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                  <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarButtonPressedFillBrush}" Stroke="{StaticResource ScrollBarButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path x:Name="ArrowPressed" Data="M5.5546699,0 L9.6730003,0.062734604 L4.1176658,5.4720101 L9.6730003,10.881266 L5.5546699,10.944 L0,5.4776478 z" Fill="{StaticResource ScrollBarGlyphArrowPressedBrush}" StrokeThickness="0" Height="10.944" Width="9.673" Stretch="Fill" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" Opacity="0"/>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                          <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ArrowPressed"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarButtonMouseOverFillBrush}" Stroke="{StaticResource ScrollBarButtonMouseOverBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z" Fill="{StaticResource ScrollBarGlyphArrowBrush}" StrokeThickness="0" Height="9.673" Width="10.944" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                  <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarButtonPressedFillBrush}" Stroke="{StaticResource ScrollBarButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path x:Name="ArrowPressed" Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z" Fill="{StaticResource ScrollBarGlyphArrowPressedBrush}" StrokeThickness="0" Height="9.673" Width="10.944" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Margin="0" Opacity="0" HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                          <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ArrowPressed"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarButtonMouseOverFillBrush}" Stroke="{StaticResource ScrollBarButtonMouseOverBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path Data="M5.6343679,0 L11.113339,5.5538998 L11.05059,9.6716595 L5.640007,4.117095 L0.22944409,9.6716595 L0.1666943,5.5538998 z" Fill="{StaticResource ScrollBarGlyphArrowBrush}" StrokeThickness="0" Height="9.673" Width="10.944" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                  <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarButtonPressedFillBrush}" Stroke="{StaticResource ScrollBarButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  <Path x:Name="ArrowPressed" Data="M5.6343679,0 L11.113339,5.5538998 L11.05059,9.6716595 L5.640007,4.117095 L0.22944409,9.6716595 L0.1666943,5.5538998 z" Fill="{StaticResource ScrollBarGlyphArrowPressedBrush}" StrokeThickness="0" Height="9.673" Width="10.944" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                <Grid>
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
                          <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                      <VisualState x:Name="Unfocused"/>
                      <VisualState x:Name="Focused"/>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid x:Name="ThumbVisual" Margin="0">
                    <Rectangle x:Name="Background" Fill="{StaticResource ScrollBarThumbFillBrush}" Stroke="{StaticResource ScrollBarThumbBorderBrush}" StrokeThickness="1"/>
                    <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarThumbMouseOverFillBrush}" Stroke="{StaticResource ScrollBarThumbMouseOverBorderBrush}" StrokeThickness="1" Opacity="0"/>
                    <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarThumbPressedFillBrush}" Stroke="{StaticResource ScrollBarThumbPressedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  </Grid>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                <Grid>
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid x:Name="ThumbVisual" Margin="0">
                    <Rectangle x:Name="Background" Fill="{StaticResource ScrollBarThumbFillBrush}" Stroke="{StaticResource ScrollBarThumbBorderBrush}" StrokeThickness="1"/>
                    <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource ScrollBarThumbMouseOverFillBrush}" Stroke="{StaticResource ScrollBarThumbMouseOverBorderBrush}" StrokeThickness="1" Opacity="0"/>
                    <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource ScrollBarThumbPressedFillBrush}" Stroke="{StaticResource ScrollBarThumbPressedBorderBrush}" StrokeThickness="1" Opacity="0"/>
                  </Grid>
                </Grid>
              </ControlTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ScrollingIndicatorStates">
                <VisualState x:Name="TouchIndicator">
                  <Storyboard>
                    <FadeInThemeAnimation Storyboard.TargetName="HorizontalPanningRoot"/>
                    <FadeInThemeAnimation Storyboard.TargetName="VerticalPanningRoot"/>
                    <FadeOutThemeAnimation Storyboard.TargetName="HorizontalRoot"/>
                    <FadeOutThemeAnimation Storyboard.TargetName="VerticalRoot"/>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalRoot" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalRoot" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseIndicator">
                  <Storyboard>
                    <FadeInThemeAnimation Storyboard.TargetName="HorizontalRoot"/>
                    <FadeInThemeAnimation Storyboard.TargetName="VerticalRoot"/>
                    <FadeOutThemeAnimation Storyboard.TargetName="HorizontalPanningRoot"/>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalPanningRoot" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <FadeOutThemeAnimation Storyboard.TargetName="VerticalPanningRoot"/>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalPanningRoot" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NoIndicator">
                  <Storyboard>
                    <FadeOutThemeAnimation BeginTime="0" Storyboard.TargetName="HorizontalPanningRoot"/>
                    <FadeOutThemeAnimation BeginTime="0" Storyboard.TargetName="VerticalPanningRoot"/>
                    <FadeOutThemeAnimation BeginTime="0" Storyboard.TargetName="HorizontalRoot"/>
                    <FadeOutThemeAnimation BeginTime="0" Storyboard.TargetName="VerticalRoot"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalRoot">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Rectangle Grid.ColumnSpan="5" Margin="0" StrokeThickness="0" Fill="{StaticResource ScrollBarTrackBrush}"/>
              <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" MinHeight="17" IsTabStop="False" Interval="50" Margin="0" Template="{StaticResource HorizontalDecrementTemplate}" Width="43" VerticalAlignment="Center"/>
              <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" Width="0"/>
              <Thumb x:Name="HorizontalThumb" Grid.Column="2" Background="{TemplateBinding Background}" Template="{StaticResource HorizontalThumbTemplate}" Height="17" MinWidth="48"/>
              <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}"/>
              <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" MinHeight="17" IsTabStop="False" Interval="50" Margin="0" Template="{StaticResource HorizontalIncrementTemplate}" Width="43" VerticalAlignment="Center"/>
            </Grid>
            <Grid x:Name="HorizontalPanningRoot" HorizontalAlignment="Left">
              <Rectangle x:Name="HorizontalPanningThumb" Fill="{StaticResource ScrollBarFaceBrush}" Stroke="{StaticResource ScrollBarShadowBrush}" StrokeThickness="1" Height="5" MinWidth="48"/>
            </Grid>
            <Grid x:Name="VerticalRoot">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Rectangle Margin="0" StrokeThickness="0" Grid.RowSpan="5" Fill="{StaticResource ScrollBarTrackBrush}"/>
              <RepeatButton x:Name="VerticalSmallDecrease" Height="43" MinWidth="17" IsTabStop="False" Interval="50" Margin="0" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}" HorizontalAlignment="Center"/>
              <RepeatButton x:Name="VerticalLargeDecrease" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}"/>
              <Thumb x:Name="VerticalThumb" Grid.Row="2" Background="{TemplateBinding Background}" Template="{StaticResource VerticalThumbTemplate}" Width="17" MinHeight="48"/>
              <RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}"/>
              <RepeatButton x:Name="VerticalSmallIncrease" Height="43" MinWidth="17" IsTabStop="False" Interval="50" Margin="0" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}" HorizontalAlignment="Center"/>
            </Grid>
            <Grid x:Name="VerticalPanningRoot" VerticalAlignment="Top">
              <Rectangle x:Name="VerticalPanningThumb" Fill="{StaticResource ScrollBarFaceBrush}" Stroke="{StaticResource ScrollBarShadowBrush}" StrokeThickness="1" Width="5" MinHeight="48"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ComboBoxItem -->
  <Style TargetType="ComboBoxItem">
    <Setter Property="Padding" Value="12,0,12,0"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="TabNavigation" Value="Local"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource ControlDisabledTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisual"/>
                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected"/>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverVisual" Fill="{StaticResource SelectMouseOverBrush}" IsHitTestVisible="False" Opacity="0" StrokeThickness="0" Margin="0,0"/>
            <Rectangle x:Name="SelectedVisual" Fill="{StaticResource ControlHighlightBrush}" IsHitTestVisible="False" Opacity="0" StrokeThickness="0" Margin="0,0"/>
            <Rectangle x:Name="PressedVisual" IsHitTestVisible="False" Opacity="0" StrokeThickness="0" Margin="0,0" Fill="{StaticResource ControlPressedFillBrush}"/>
            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ListBoxItem -->
  <Style TargetType="ListBoxItem">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="TabNavigation" Value="Local"/>
    <Setter Property="Padding" Value="12,5,12,7"/>
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource ControlDisabledTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisual"/>
                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected"/>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual"/>
                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverVisual" Fill="{StaticResource ListBoxItemMouseOverBrush}" IsHitTestVisible="False" Opacity="0" StrokeThickness="0"/>
            <Rectangle x:Name="SelectedVisual" Fill="{StaticResource ListBoxItemHighlightBrush}" IsHitTestVisible="False" Opacity="0" StrokeThickness="0"/>
            <Rectangle x:Name="PressedVisual" Fill="{StaticResource ListBoxItemPressedBrush}" IsHitTestVisible="False" Opacity="0" StrokeThickness="0"/>
            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset=".5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ListBox -->
  <Style TargetType="ListBox">
    <Setter Property="Foreground" Value="{StaticResource TextBoxTextBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource LightPopUpBorderBrush}"/>
    <Setter Property="Background" Value="{StaticResource LBNormalBackgroundBrush}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Rails"/>
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="TabNavigation" Value="Once"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledBorder"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder"/>
                    <ColorAnimation Duration="0" To="Red" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ScrollViewer" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusedBorder"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBorder"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="DisabledBorder" Background="Transparent" BorderBrush="{StaticResource LBDisabledBorderBrush}" BorderThickness="{StaticResource ControlBorderThickness}" Opacity="0"/>
            <Border x:Name="FocusedBorder" Background="{StaticResource LBFocusedBackgroundBrush}" Opacity="0"/>
            <Border x:Name="NormalBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <ScrollViewer x:Name="ScrollViewer" Foreground="{TemplateBinding Foreground}" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" Margin="{TemplateBinding BorderThickness}"
                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Special ListViewItemStyle for Windows.UI.Xaml.Controls.ListViewItem -->
  <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Margin" Value="0,0,18,0"/>
    <Setter Property="Padding" Value="10"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="TabNavigation" Value="Local"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Grid>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MouseOverRect"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Pressed">
                  <Storyboard>
                    <TapDownThemeAnimation TargetName="ContentContainer" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="contentPresenter"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To=".55" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="Normal" From="Pressed" GeneratedDuration="0:0:0.650"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused"/>
                <vsm:VisualState x:Name="PointerFocused"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="SelectionHintStates">
                <vsm:VisualState x:Name="VerticalSelectionHint">
                  <Storyboard>
                    <CrossSlideHintThemeAnimation TargetName="ContentBorder" ToVerticalOffset="10" ToHorizontalOffset="0" />
                    <CrossSlideHintThemeAnimation TargetName="SelectedCheckMark" ToVerticalOffset="10" ToHorizontalOffset="0" />
                    <DoubleAnimation Storyboard.TargetName="HintGlyph"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="HorizontalSelectionHint">
                  <Storyboard>
                    <CrossSlideHintThemeAnimation TargetName="ContentBorder" ToHorizontalOffset="-10" ToVerticalOffset="0" />
                    <CrossSlideHintThemeAnimation TargetName="SelectedCheckMark" ToHorizontalOffset="-10" ToVerticalOffset="0" />
                    <DoubleAnimation Storyboard.TargetName="HintGlyph"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="NoSelectionHint" />
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NoSelectionHint" GeneratedDuration="0:0:0.65"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="SelectionStates">
                <vsm:VisualState x:Name="Selecting">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedRect"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectingGlyph"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedRect"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedMouseOverRect"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="CheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unselecting"/>
                <vsm:VisualState x:Name="Unselected"/>
                <vsm:VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedRect"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedMouseOverRect"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="CheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0" />
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="DragStates">
                <vsm:VisualState x:Name="NotDragging" />
                <vsm:VisualState x:Name="Dragging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="InnerDragContent"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0.60" />
                    <DragItemThemeAnimation TargetName="InnerDragContent" />
                    <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="DraggingTarget">
                  <Storyboard>
                    <DropTargetItemThemeAnimation TargetName="OuterContainer" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="MultipleDraggingPrimary">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MultiArrangeStackElement"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="InnerDragContent"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0.60" />
                    <FadeInThemeAnimation TargetName="MultiArrangeStackElement" />
                    <DragItemThemeAnimation TargetName="InnerDragContent" />
                    <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />

                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="MultipleDraggingSecondary">
                  <Storyboard>
                    <FadeOutThemeAnimation TargetName="ContentContainer" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.650"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="ReorderHintStates">
                <vsm:VisualState x:Name="NoReorderHint"/>
                <vsm:VisualState x:Name="BottomReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Bottom" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="TopReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Top" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="RightReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Right" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="LeftReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Left" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.650"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="DataVirtualizationStates">
                <vsm:VisualState x:Name="DataAvailable"/>
                <vsm:VisualState x:Name="DataPlaceholder">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
                                                    Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
                                                    Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Grid x:Name="OuterContainer">
              <Path x:Name="SelectingGlyph" Opacity="0" Data="F1 M133.114,17.918894 L137.20706,13.2239 L144.63123,19.586983 L156.41039,5.8218293 L161.20587,9.8648186 L145.60767,28.390999 z" Fill="{StaticResource ControlHighlightBrush}" Height="12.913" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
              <Grid x:Name="ReorderHintContent">
                <Grid.RenderTransform>
                  <CompositeTransform />
                </Grid.RenderTransform>
                <Grid x:Name="ContentContainer">
                  <Grid x:Name="InnerDragContent">
                    <Grid x:Name="CheckMark"
                            Height="40"
                            Width="40"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                      <Path x:Name="HintGlyph" Opacity="0" Data="F1 M133.114,17.918894 L137.20706,13.2239 L144.63123,19.586983 L156.41039,5.8218293 L161.20587,9.8648186 L145.60767,28.390999 z" Fill="{StaticResource ListViewItemSemiTransparentHighlightBrush}" Height="12.913" Stretch="Fill"  Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                    </Grid>
                    <Border x:Name="ContentBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <Grid>
                        <Rectangle x:Name="SelectedRect"
                                    Opacity="0"
                                    Fill="{StaticResource ControlHighlightBrush}" />
                        <Rectangle x:Name="SelectedMouseOverRect"
                                    Opacity="0"
                                    Fill="{StaticResource ListViewItemSelectedMouseOverBrush}" />
                        <Rectangle x:Name="MouseOverRect"
                                Opacity="0"
                                Fill="{StaticResource ListViewItemMouseOverBrush}" />
                        <ContentPresenter x:Name="contentPresenter"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Margin="{TemplateBinding Padding}" />
                        <TextBlock x:Name="PlaceholderTextBlock"
                                    Opacity="0"
                                    Text="Xg"
                                    Foreground="{x:Null}"
                                    Margin="{TemplateBinding Padding}" />
                        <Rectangle x:Name="PlaceholderRect"
                                    Visibility="Collapsed"
                                    Fill="{StaticResource ListViewItemPlaceholderRectBrush}" />
                        <Rectangle x:Name="FocusVisualWhite" Stroke="White" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5" UseLayoutRounding="True" />
                        <Rectangle x:Name="FocusVisualBlack" Stroke="Black" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5" UseLayoutRounding="True" />
                      </Grid>
                    </Border>

                    <Grid x:Name="SelectedCheckMarkOuter">
                      <Grid x:Name="SelectedCheckMark"
                              Opacity="0"
                              Height="40"
                              Width="40"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top">
                        <Grid.RenderTransform>
                          <CompositeTransform />
                        </Grid.RenderTransform>
                        <Path x:Name="SelectedGlyph" Data="F1 M133.114,17.918894 L137.20706,13.2239 L144.63123,19.586983 L156.41039,5.8218293 L161.20587,9.8648186 L145.60767,28.390999 z" Fill="{StaticResource ControlForegroundBrush}" Height="12.913" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                      </Grid>
                    </Grid>
                    <Grid x:Name="MultiArrangeStackElement"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Background="{StaticResource ListViewItemSemiTransparentHighlightBrush}">
                      <TextBlock x:Name="RearrangingItemsValue"
                                  Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
                                  Style="{StaticResource SelectedItemCountStyle}"
                                  TextWrapping="Wrap"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top" />
                    </Grid>
                  </Grid>
                </Grid>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Windows.UI.Xaml.Controls.ListView -->
  <Style TargetType="ListView">
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="IsCrossSlideEnabled" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    <Setter Property="ItemContainerTransitions">
      <Setter.Value>
        <TransitionCollection>
          <AddDeleteThemeTransition />
          <ContentThemeTransition />
          <ReorderThemeTransition />
          <EntranceThemeTransition />
        </TransitionCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListView">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Margin="{TemplateBinding Margin}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer x:Name="ScrollViewer"
                              Padding="{TemplateBinding Padding}"
                              TabNavigation="{TemplateBinding TabNavigation}"
                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                              ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" >
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Windows.UI.Xaml.Controls.GridView -->
  <Style TargetType="GridView">
    <Setter Property="Padding" Value="0,0,0,10" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    <Setter Property="IsCrossSlideEnabled" Value="True" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="ItemContainerTransitions">
      <Setter.Value>
        <TransitionCollection>
          <AddDeleteThemeTransition />
          <ContentThemeTransition />
          <ReorderThemeTransition />
          <EntranceThemeTransition />
        </TransitionCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <WrapGrid Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="GridView">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Margin="{TemplateBinding Margin}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer x:Name="ScrollViewer"
                              Padding="{TemplateBinding Padding}"
                              TabNavigation="{TemplateBinding TabNavigation}"
                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                              ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Windows.UI.Xaml.Controls.ListViewItem -->
  <Style TargetType="ListViewItem">
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Margin" Value="0,0,10,10"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="TabNavigation" Value="Local"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Grid>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedMouseOverCornerHighlightPath"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Pressed">
                  <Storyboard>
                    <TapDownThemeAnimation TargetName="ContentContainer" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="contentPresenter"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To=".55" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="Normal" From="Pressed" GeneratedDuration="0:0:0.65"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused"/>
                <vsm:VisualState x:Name="PointerFocused"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="SelectionHintStates">
                <vsm:VisualState x:Name="VerticalSelectionHint">
                  <Storyboard>
                    <CrossSlideHintThemeAnimation TargetName="ContentBorder" ToVerticalOffset="10" ToHorizontalOffset="0" />
                    <CrossSlideHintThemeAnimation TargetName="SelectedCheckMark" ToVerticalOffset="10" ToHorizontalOffset="0" />
                    <DoubleAnimation Storyboard.TargetName="HintGlyph"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="HorizontalSelectionHint">
                  <Storyboard>
                    <CrossSlideHintThemeAnimation TargetName="ContentBorder" ToHorizontalOffset="-10" ToVerticalOffset="0" />
                    <CrossSlideHintThemeAnimation TargetName="SelectedCheckMark" ToHorizontalOffset="-10" ToVerticalOffset="0" />
                    <DoubleAnimation Storyboard.TargetName="HintGlyph"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="NoSelectionHint" />
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NoSelectionHint" GeneratedDuration="0:0:0.65"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="SelectionStates">
                <vsm:VisualState x:Name="Selecting">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectingGlyph"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedMouseOverBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="CheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unselecting"/>
                <vsm:VisualState x:Name="Unselected"/>
                <vsm:VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedMouseOverBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="CheckMark"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0" />
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="DragStates">
                <vsm:VisualState x:Name="NotDragging" />
                <vsm:VisualState x:Name="Dragging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="InnerDragContent"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0.60" />
                    <DragItemThemeAnimation TargetName="InnerDragContent" />
                    <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                    <FadeOutThemeAnimation TargetName="SelectedBorderOuter" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="DraggingTarget">
                  <Storyboard>
                    <DropTargetItemThemeAnimation TargetName="OuterContainer" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="MultipleDraggingPrimary">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MultiArrangeStackElement"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="1" />
                    <DoubleAnimation Storyboard.TargetName="InnerDragContent"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0"
                                        To="0.60" />
                    <FadeInThemeAnimation TargetName="MultiArrangeStackElement" />
                    <DragItemThemeAnimation TargetName="InnerDragContent" />
                    <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                    <FadeOutThemeAnimation TargetName="SelectedBorderOuter" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="MultipleDraggingSecondary">
                  <Storyboard>
                    <FadeOutThemeAnimation TargetName="ContentContainer" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.650"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="ReorderHintStates">
                <vsm:VisualState x:Name="NoReorderHint"/>
                <vsm:VisualState x:Name="BottomReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Bottom" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="TopReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Top" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="RightReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Right" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="LeftReorderHint">
                  <Storyboard>
                    <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="40" Direction="Left" />
                  </Storyboard>
                </vsm:VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.65"/>
                </VisualStateGroup.Transitions>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="DataVirtualizationStates">
                <vsm:VisualState x:Name="DataAvailable"/>
                <vsm:VisualState x:Name="DataPlaceholder">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
                                                    Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
                                                    Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Grid x:Name="OuterContainer">
              <Path x:Name="SelectingGlyph" Opacity="0" Data="F1 M133.114,17.918894 L137.20706,13.2239 L144.63123,19.586983 L156.41039,5.8218293 L161.20587,9.8648186 L145.60767,28.390999 z" Fill="{StaticResource ControlHighlightBrush}" Height="12.913" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
              <Grid x:Name="ReorderHintContent">
                <Grid.RenderTransform>
                  <CompositeTransform />
                </Grid.RenderTransform>
                <Grid x:Name="ContentContainer">
                  <Grid x:Name="InnerDragContent">
                    <Grid x:Name="CheckMark"
                            Height="40"
                            Width="40"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                      <Path x:Name="HintGlyph" Opacity="0" Data="F1 M133.114,17.918894 L137.20706,13.2239 L144.63123,19.586983 L156.41039,5.8218293 L161.20587,9.8648186 L145.60767,28.390999 z" Fill="{StaticResource ListViewItemSemiTransparentHighlightBrush}" Height="12.913" Stretch="Fill"  Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                    </Grid>
                    <Border x:Name="ContentBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Margin="{TemplateBinding Padding}" />
                        <TextBlock x:Name="PlaceholderTextBlock"
                                     Visibility="Collapsed"
                                     Text="Xg"
                                     Foreground="{x:Null}"
                                     Margin="{TemplateBinding Padding}" />
                        <Rectangle x:Name="PlaceholderRect"
                                    Visibility="Collapsed"
                                    Fill="{StaticResource ListViewItemPlaceholderRectBrush}" />
                        <Border x:Name="MouseOverBorder"
                                IsHitTestVisible="False"
                                Opacity="0"
                                BorderBrush="{StaticResource ListViewItemMouseOverBrush}"
                                BorderThickness="4" />
                        <Grid x:Name="SelectedBorderOuter">
                          <Border x:Name="SelectedBorder"
                                  IsHitTestVisible="False"
                                  Opacity="0"
                                  BorderBrush="{StaticResource ControlHighlightBrush}"
                                  BorderThickness="4" />
                        </Grid>
                        <Border x:Name="SelectedMouseOverBorder"
                                IsHitTestVisible="False"
                                Opacity="0"
                                BorderBrush="{StaticResource ListViewItemSelectedMouseOverBrush}"
                                BorderThickness="4" />
                      </Grid>
                    </Border>

                    <Grid x:Name="SelectedCheckMarkOuter">
                      <Grid x:Name="SelectedCheckMark" Opacity="0" Height="40" Width="40" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <Path x:Name="SelectedCornerHighlightPath" Data="M0.015876867,-0.10926001 L40.015629,-0.12526658 L39.984005,39.906254 z"  Fill="{StaticResource ListViewItemSelectedMouseOverBrush}" Margin="0.016,-0.021,-0.016,-0.01" Stretch="Fill"/>
                        <Path x:Name="SelectedMouseOverCornerHighlightPath" Data="M0.015876867,-0.10926001 L40.015629,-0.12526658 L39.984005,39.906254 z"  Fill="{StaticResource ListViewItemSelectedMouseOverBrush}" Margin="0.016,-0.021,-0.016,-0.01" Stretch="Fill"/>
                        <Path x:Name="SelectedGlyph" Data="F1 M133.114,17.918894 L137.20706,13.2239 L144.63123,19.586983 L156.41039,5.8218293 L161.20587,9.8648186 L145.60767,28.390999 z" Fill="{StaticResource ControlForegroundBrush}" Height="12.913" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                      </Grid>
                    </Grid>
                    <Grid x:Name="MultiArrangeStackElement"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Background="{StaticResource ListViewItemSemiTransparentHighlightBrush}">
                      <TextBlock x:Name="RearrangingItemsValue"
                                  Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
                                  Style="{StaticResource SelectedItemCountStyle}"
                                  TextWrapping="Wrap"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top" />
                    </Grid>
                  </Grid>
                </Grid>
                <Rectangle x:Name="FocusVisualWhite" Stroke="White" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5" UseLayoutRounding="True" />
                <Rectangle x:Name="FocusVisualBlack" Stroke="Black" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5" UseLayoutRounding="True" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Windows.UI.Xaml.Controls.JumpViewer -->
  <Style TargetType="JumpViewer">
    <Setter Property="Padding" Value="3" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="JumpViewer">
          <ScrollViewer
              x:Name="ScrollViewer"
              HorizontalScrollBarVisibility="Disabled"
              VerticalScrollBarVisibility="Disabled"
              HorizontalScrollMode="Disabled"
              VerticalScrollMode="Disabled"
              ZoomMode="Enabled"
              IsZoomChainingEnabled="True"
              IsZoomInertiaEnabled="False"
              ZoomSnapPointsType="Mandatory"
              MinZoomFactor="0.5"
              MaxZoomFactor="2.0">
            <ScrollViewer.Template>
              <ControlTemplate TargetType="ScrollViewer">
                <ScrollContentPresenter
                    x:Name="ScrollContentPresenter"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Margin="{TemplateBinding Padding}" />
              </ControlTemplate>
            </ScrollViewer.Template>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="JumpViewStates">
                <vsm:VisualStateGroup.Transitions>
                  <VisualTransition To="Normal" GeneratedDuration="0:0:1">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames
                          Storyboard.TargetName="ContentViewPresenter"
                          Storyboard.TargetProperty="Visibility"
                          Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <FadeOutThemeAnimation Storyboard.TargetName="JumpViewPresenter"/>
                      <FadeInThemeAnimation Storyboard.TargetName="ContentViewPresenter"/>

                      <ObjectAnimationUsingKeyFrames
                          Storyboard.TargetName="JumpViewPresenter"
                          Storyboard.TargetProperty="Visibility"
                          BeginTime="0:0:1"
                          Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition To="Jumping" GeneratedDuration="0:0:1">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames
                          Storyboard.TargetName="JumpViewPresenter"
                          Storyboard.TargetProperty="Visibility"
                          Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <FadeOutThemeAnimation Storyboard.TargetName="ContentViewPresenter" />
                      <FadeInThemeAnimation Storyboard.TargetName="JumpViewPresenter" />

                      <ObjectAnimationUsingKeyFrames
                          Storyboard.TargetName="ContentViewPresenter"
                          Storyboard.TargetProperty="Visibility"
                          BeginTime="0:0:1"
                          Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="Jumping">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetName="JumpViewPresenter"
                        Storyboard.TargetProperty="Visibility"
                        Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation
                        Storyboard.TargetName="ContentViewPresenter"
                        Storyboard.TargetProperty="Opacity"
                        To="0"
                        Duration="0" />
                    <DoubleAnimation
                        Storyboard.TargetName="JumpViewPresenter"
                        Storyboard.TargetProperty="Opacity"
                        To="1"
                        Duration="0" />

                    <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetName="ContentViewPresenter"
                        Storyboard.TargetProperty="Visibility"
                        Duration="00:00:00">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
              <Grid Margin="{TemplateBinding Padding}">
                <ContentPresenter
                    x:Name="ContentViewPresenter"
                    Content="{TemplateBinding ContentView}" />
                <ContentPresenter
                    x:Name="JumpViewPresenter"
                    Content="{TemplateBinding JumpView}"
                    Opacity="0"
                    Visibility="Collapsed" />
              </Grid>
            </Border>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ApplicationBar -->
  <Style TargetType="ApplicationBar">
    <Setter Property="Background" Value="#E5000000"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ApplicationBar">
          <Grid
              x:Name="Grid"
              Background="{TemplateBinding Background}">
            <Grid.RenderTransform>
              <TranslateTransform Y="0" x:Name="GridTranslate"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="VisibleStates">
                <VisualState x:Name="TopVisible">
                  <Storyboard>
                    <DoubleAnimation
                            Storyboard.TargetName="GridTranslate"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Y"
                            To="0"/>
                    <DoubleAnimation
                            Storyboard.TargetName="Grid"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Opacity"
                            To="1"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopTucked">
                  <Storyboard>
                    <DoubleAnimation
                            Storyboard.TargetName="Grid"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Opacity"
                            To="1"/>
                    <DoubleAnimation
                            Storyboard.TargetName="GridTranslate"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Y"
                            To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.InverseTuckHeight}"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopHidden">
                  <Storyboard>
                    <DoubleAnimation
                            Storyboard.TargetName="Grid"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Opacity"
                            To="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BottomVisible">
                  <Storyboard>
                    <DoubleAnimation
                            Storyboard.TargetName="GridTranslate"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Y"
                            To="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BottomTucked">
                  <Storyboard>
                    <DoubleAnimation
                            Storyboard.TargetName="GridTranslate"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Y"
                            To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TuckHeight}"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BottomHidden">
                  <Storyboard>
                    <DoubleAnimation
                            Storyboard.TargetName="GridTranslate"
                            Duration="00:00:00.2"
                            Storyboard.TargetProperty="Y"
                            To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ActualHeight}"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
              <ContentPresenter/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ProgressRing -->
  <Style TargetType="ProgressRing">
    <Setter Property="Foreground" Value="{StaticResource ProgressBarFillBrush}"/>
    <Setter Property="IsHitTestVisible" Value="False"/>
    <Setter Property="Height" Value="60"/>
    <Setter Property="Width" Value="60"/>
    <Setter Property="MinHeight" Value="20"/>
    <Setter Property="MinWidth" Value="20"/>
    <Setter Property="Background" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ProgressRing">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                    Storyboard.TargetName="LargeCanvas"
                                                    Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Small">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                    Storyboard.TargetName="LargeCanvas"
                                                    Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive"/>
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                    Storyboard.TargetName="Ring"
                                                    Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="RingRotation"
                                        Duration="00:00:03.19"
                                        Storyboard.TargetProperty="Angle"
                                        From="0" To="180"/>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E1"
                        Storyboard.TargetProperty="Opacity"
                        BeginTime="00:00:00">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.207" Value="0"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.957" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E2"
                        Storyboard.TargetProperty="Opacity"
                        BeginTime="00:00:00.167">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.207" Value="0"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.957" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E3"
                        Storyboard.TargetProperty="Opacity"
                        BeginTime="00:00:00.334">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.207" Value="0"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.957" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E4"
                        Storyboard.TargetProperty="Opacity"
                        BeginTime="00:00:00.501">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.207" Value="0"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.957" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E5"
                        Storyboard.TargetProperty="Opacity"
                        BeginTime="00:00:00.668">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.207" Value="0"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.957" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E6"
                        Storyboard.TargetProperty="Opacity"
                        BeginTime="00:00:00.835">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.207" Value="0"/>
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.957" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E1R"
                        BeginTime="00:00:00"
                        Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:0.433" Value="135" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.183" Value="225"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.033" Value="495" KeySpline="0.5,0.2,0.5,0.8"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="585"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.207" Value="720" KeySpline="0,0,1,0.8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E2R"
                        BeginTime="00:00:00.167"
                        Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:0.433" Value="135" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.183" Value="225"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.033" Value="495" KeySpline="0.5,0.2,0.5,0.8"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="585"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.207" Value="720" KeySpline="0,0,1,0.8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E3R"
                        BeginTime="00:00:00.334"
                        Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:0.433" Value="135" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.183" Value="225"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.033" Value="495" KeySpline="0.5,0.2,0.5,0.8"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="585"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.207" Value="720" KeySpline="0,0,1,0.8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E4R"
                        BeginTime="00:00:00.501"
                        Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:0.433" Value="135" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.183" Value="225"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.033" Value="495" KeySpline="0.5,0.2,0.5,0.8"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="585"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.207" Value="720" KeySpline="0,0,1,0.8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E5R"
                        BeginTime="00:00:00.668"
                        Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:0.433" Value="135" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.183" Value="225"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.033" Value="495" KeySpline="0.5,0.2,0.5,0.8"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="585"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.207" Value="720" KeySpline="0,0,1,0.8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="E6R"
                        BeginTime="00:00:00.835"
                        Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:0.433" Value="135" KeySpline="0.13,0.21,0.1,0.7"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1.183" Value="225"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.033" Value="495" KeySpline="0.5,0.2,0.5,0.8"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="585"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:3.207" Value="720" KeySpline="0,0,1,0.8"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Ring"
                    Margin="{TemplateBinding Padding}"
                    Visibility="Collapsed"
                    RenderTransformOrigin=".5,.5">
              <Grid.RenderTransform>
                <RotateTransform x:Name="RingRotation"/>
              </Grid.RenderTransform>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E1R"/>
                </Canvas.RenderTransform>
                <Ellipse
                    x:Name="E1"
                    Opacity="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseOffset}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Fill="{TemplateBinding Foreground}"/>
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E2R"/>
                </Canvas.RenderTransform>
                <Ellipse
                    x:Name="E2"
                    Opacity="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseOffset}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Fill="{TemplateBinding Foreground}"/>
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E3R"/>
                </Canvas.RenderTransform>
                <Ellipse
                    x:Name="E3"
                    Opacity="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseOffset}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Fill="{TemplateBinding Foreground}"/>
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E4R"/>
                </Canvas.RenderTransform>
                <Ellipse
                    x:Name="E4"
                    Opacity="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseOffset}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Fill="{TemplateBinding Foreground}"/>
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E5R"/>
                </Canvas.RenderTransform>
                <Ellipse
                    x:Name="E5"
                    Opacity="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseOffset}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Fill="{TemplateBinding Foreground}"/>
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5"
                      Visibility="Collapsed"
                      x:Name="LargeCanvas">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E6R"/>
                </Canvas.RenderTransform>
                <Ellipse
                    x:Name="E6"
                    Opacity="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseDiameter}"
                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EllipseOffset}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Fill="{TemplateBinding Foreground}"/>
              </Canvas>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ToggleSwitch -->
  <Style TargetType="ToggleSwitch">
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontWeight" Value="Semibold"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="Foreground" Value="{StaticResource ControlRestTextColor}"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="MinHeight" Value="19"/>
    <Setter Property="MinWidth" Value="50"/>
    <Setter Property="Padding" Value="12,4,12,12"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Width" Value="265"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleSwitch">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Clip="{TemplateBinding Clip}" Opacity="{TemplateBinding Opacity}" Padding="{TemplateBinding Padding}" RenderTransform="{TemplateBinding RenderTransform}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="Normal" GeneratedDuration="0:0:0"/>
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0"/>
                  <VisualTransition To="Pressed" GeneratedDuration="0:0:0"/>
                  <VisualTransition To="Disabled" GeneratedDuration="0:0:0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Pressed"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource ToggleSwitchDisabledBrush}" Duration="0:0:0"/>
                    <ColorAnimation Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource ToggleSwitchDisabledBrush}" Duration="0:0:0"/>
                    <ColorAnimation Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource ToggleSwitchDisabledBrush}" Duration="0:0:0"/>
                    <ColorAnimation Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource ToggleSwitchDisabledOuterBorderBrush}" Duration="0:0:0"/>
                    <ColorAnimation Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource ToggleSwitchDisabledInnerBorderBrush}" Duration="0:0:0"/>
                    <ColorAnimation Storyboard.TargetName="SwitchKnob" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{StaticResource ToggleSwitchDisabledKnobFillBrush}" Duration="0:0:0"/>
                    <DoubleAnimation Storyboard.TargetName="SwitchCurtain" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ToggleStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="Dragging" GeneratedDuration="0:0:0"/>
                  <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" To="On" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}"/>
                      <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CurtainCurrentToOnOffset}"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" To="Off" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}"/>
                      <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CurtainCurrentToOffOffset}"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OnToOffTransition" From="On" To="Off" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}"/>
                      <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CurtainOnToOffOffset}"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OffToOnTransition" From="Off" To="On" GeneratedDuration="0">
                    <Storyboard>
                      <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}"/>
                      <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CurtainOffToOnOffset}"/>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Dragging"/>
                <VisualState x:Name="Off">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="CurtainTranslateTransform" Storyboard.TargetProperty="(TranslateTransform.X)" To="-44" Duration="0:0:0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="On">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="CurtainTranslateTransform" Storyboard.TargetProperty="(TranslateTransform.X)" To="0" Duration="0:0:0"/>
                    <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="(TranslateTransform.X)" To="38" Duration="0:0:0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ContentStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="OffContent">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
                    <DoubleAnimation Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OnContent">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0"/>
                    <DoubleAnimation Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="Focused" GeneratedDuration="0"/>
                  <VisualTransition To="Unfocused" GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid VerticalAlignment="Center" Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="Segoe UI" FontSize="{TemplateBinding FontSize}" Foreground="#7C000000" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <ContentPresenter  x:Name="OffContentPresenter" Grid.Row="1" Margin="0,0,0,0" Content="{TemplateBinding OffContent}" ContentTemplate="{TemplateBinding OffContentTemplate}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Bottom"/>
                <ContentPresenter x:Name="OnContentPresenter" Grid.Row="1" Margin="0,0,0,0" Content="{TemplateBinding OnContent}" ContentTemplate="{TemplateBinding OnContentTemplate}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Bottom"/>
                <Grid Grid.Row="1" Grid.Column="1" Margin="-5" VerticalAlignment="Center">
                  <Border Margin="5">
                    <Grid x:Name="SwitchKnobBounds">
                      <Border x:Name="OuterBorder" BorderBrush="#59000000" BorderThickness="2">
                        <Border x:Name="InnerBorder" Background="#59000000" BorderBrush="White" BorderThickness="1">
                          <ContentPresenter x:Name="SwitchCurtainBounds">
                            <ContentPresenter x:Name="SwitchCurtainClip">
                              <Rectangle x:Name="SwitchCurtain" Fill="#FF3BACE6" Width="44" Height="13">
                                <Rectangle.RenderTransform>
                                  <TransformGroup>
                                    <TranslateTransform x:Name="CurtainTranslateTransform" X="-44"/>
                                  </TransformGroup>
                                </Rectangle.RenderTransform>
                              </Rectangle>
                            </ContentPresenter>
                          </ContentPresenter>
                        </Border>
                      </Border>
                      <Rectangle x:Name="SwitchKnob" Fill="{StaticResource ToggleSwitchKnobFillBrush}" HorizontalAlignment="Left" Width="12">
                        <Rectangle.RenderTransform>
                          <TransformGroup>
                            <TranslateTransform x:Name="KnobTranslateTransform"/>
                          </TransformGroup>
                        </Rectangle.RenderTransform>
                      </Rectangle>
                    </Grid>
                  </Border>
                  <Thumb x:Name="SwitchThumb">
                    <Thumb.Template>
                      <ControlTemplate TargetType="Thumb">
                        <Rectangle Fill="Transparent"/>
                      </ControlTemplate>
                    </Thumb.Template>
                  </Thumb>
                </Grid>
              </Grid>
              <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
              <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ComboBox -->
  <Style TargetType="ComboBox">
    <Setter Property="Padding" Value="11,2,38,2"/>
    <Setter Property="Foreground" Value="{StaticResource TextBoxTextBrush}"/>
    <Setter Property="Background" Value="{StaticResource ControlTransparentFillBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource LightPopUpBorderBrush}"/>
    <Setter Property="MinHeight" Value="32"/>
    <Setter Property="MinWidth" Value="64"/>
    <Setter Property="Height" Value="Auto"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="TabNavigation" Value="Once"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Rails"/>
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
    <Setter Property="TabNavigation" Value="Once"/>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.Resources>
              <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{StaticResource TextBoxTextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
                <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Grid>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0.87" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0.49" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledBorder"/>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledPath"/>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked"/>
                            <VisualState x:Name="Unchecked"/>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusedBorder"/>
                                <ColorAnimation Duration="0" To="{StaticResource ControlNormalFillColor}" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Background" Height="{TemplateBinding Height}" Fill="{StaticResource ControlNormalFillBrush}" Opacity="0.8" StrokeThickness="{StaticResource ControlStrokeThickness}" Stroke="{StaticResource LightControlBorderBrush}"/>
                        <Rectangle x:Name="DisabledBorder" Height="{TemplateBinding Height}" Opacity="0" Stroke="{StaticResource LightComboBoxDisabledBorderBrush}" Fill="{StaticResource LightComboBoxDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
                        <Rectangle x:Name="FocusBorder" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Fill="{StaticResource ControlHighlightBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}" Stroke="White" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                          <Grid x:Name="grid" MinHeight="30"  Width="42" Background="Transparent">
                            <Path x:Name="path" Data="F1M24.937,5.542L18.021,12.459L11.104,5.542L15.505,5.542L18.021,8.12L20.537,5.542z" Fill="{StaticResource ControlGlyphBrush}" Height="7" Width="13" Stretch="Fill" />
                            <Path x:Name="DisabledPath" Data="F1M24.937,5.542L18.021,12.459L11.104,5.542L15.505,5.542L18.021,8.12L20.537,5.542z" Fill="{StaticResource ControlDisabledBrush}" Height="7" Width="13" Stretch="Fill" Opacity="0"/>
                          </Grid>
                        </ContentPresenter>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource ControlRestTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="{StaticResource ControlDisabledTextColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard/>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
              <vsm:VisualStateGroup x:Name="DropDownStates">
                <vsm:VisualState x:Name="Opened">
                  <Storyboard>
                    <SplitOpenThemeAnimation
                        OpenedTargetName="PopupBorder"
                        ContentTargetName="ScrollViewer"
                        ClosedTargetName="ContentPresenterBorder"
                        ContentTranslationOffset="0"
                        OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
                        OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
                        ClosedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownClosedHeight}" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation
                        OpenedTargetName="PopupBorder"
                        ContentTargetName="ScrollViewer"
                        ClosedTargetName="ContentPresenterBorder"
                        ContentTranslationOffset="40"
                        OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
                        ContentTranslationDirection="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectedItemDirection}"
                        OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
                        ClosedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownClosedHeight}" />
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder" Background="Transparent">
              <Grid>
                <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch"/>
                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}">
                  <ContentPresenter x:Name="ContentPresenter">
                    <TextBlock x:Name="textBlock" Text=" "/>
                  </ContentPresenter>
                </ContentPresenter>
              </Grid>
            </Border>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" Background="{StaticResource ControlNormalFillBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto">
                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Margin="0"
                        VerticalSnapPointsType="Mandatory"
                        VerticalSnapPointsAlignment="Near"
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                  <ItemsPresenter/>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for ToolTip -->
  <Style TargetType="ToolTip">
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource TooltipForegroundBrush}"/>
    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
    <Setter Property="Padding" Value="6,4,6,4"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Margin}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OpenStates">
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <PopOutThemeAnimation TargetName="Root"
                                            ToHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ToHorizontalOffset}"
                                            ToVerticalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ToVerticalOffset}" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <PopInThemeAnimation TargetName="Root"
                                            FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.FromHorizontalOffset}"
                                            FromVerticalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.FromVerticalOffset}" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for FlipView Button Style -->
  <Style TargetType="Button" x:Key="HorizontalPreviousFlipViewButtonStyle">
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
    <Setter Property="MinWidth" Value="70"/>
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="Padding" Value="12,4,12,5"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlPressedTextColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Glyph" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="3">
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlMouseOverFillBrush}" Opacity="0" BorderBrush="{StaticResource ControlMouseOverStrokeBrush}"/>
              <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Opacity="0" BorderBrush="{StaticResource ControlPressedStrokeBrush}"/>
              <Path x:Name="Glyph" Data="M5.5546699,0 L9.6730003,0.062734604 L4.1176658,5.4720101 L9.6730003,10.881266 L5.5546699,10.944 L0,5.4776478 z" Fill="{StaticResource  ControlGlyphBrush}" StrokeThickness="0" Height="10.944" Width="9.673" Stretch="Fill" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlDisabledFillBrush}" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource ControlDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" x:Key="HorizontalNextFlipViewButtonStyle">
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
    <Setter Property="MinWidth" Value="70"/>
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="Padding" Value="12,4,12,5"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlPressedTextColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Glyph" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="3">
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlMouseOverFillBrush}" Opacity="0" BorderBrush="{StaticResource ControlMouseOverStrokeBrush}"/>
              <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Opacity="0" BorderBrush="{StaticResource ControlPressedStrokeBrush}"/>
              <Path x:Name="Glyph"  Data="M4.1183305,0 L9.6730003,5.4663525 L4.1183305,10.944 L0,10.881266 L5.5553346,5.4719901 L0,0.062734604 z" Fill="{StaticResource  ControlGlyphBrush}" StrokeThickness="0" Height="10.944" Width="9.673" Stretch="Fill" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>

              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlDisabledFillBrush}" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource ControlDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" x:Key="VerticalPreviousFlipViewButtonStyle">
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
    <Setter Property="MinWidth" Value="70"/>
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="Padding" Value="12,4,12,5"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlPressedTextColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Glyph" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="3">
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlMouseOverFillBrush}" Opacity="0" BorderBrush="{StaticResource ControlMouseOverStrokeBrush}"/>
              <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Opacity="0" BorderBrush="{StaticResource ControlPressedStrokeBrush}"/>
              <Path x:Name="Glyph" Data="M5.6343679,0 L11.113339,5.5538998 L11.05059,9.6716595 L5.640007,4.117095 L0.22944409,9.6716595 L0.1666943,5.5538998 z" Fill="{StaticResource ControlGlyphBrush}" StrokeThickness="0" Height="9.673" Width="10.944" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlDisabledFillBrush}" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource ControlDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" x:Key="VerticalNextFlipViewButtonStyle">
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
    <Setter Property="MinWidth" Value="70"/>
    <Setter Property="MinHeight" Value="40"/>
    <Setter Property="Padding" Value="12,4,12,5"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ControlNormalStrokeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBorder" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                    <ColorAnimation Duration="0" To="{StaticResource ControlPressedTextColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Glyph" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="3">
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlMouseOverFillBrush}" Opacity="0" BorderBrush="{StaticResource ControlMouseOverStrokeBrush}"/>
              <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlForegroundBrush}" Opacity="0" BorderBrush="{StaticResource ControlPressedStrokeBrush}"/>
              <Path x:Name="Glyph" Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z" Fill="{StaticResource ControlGlyphBrush}" StrokeThickness="0" Height="9.673" Width="10.944" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlDisabledFillBrush}" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource ControlDisabledBrush}" StrokeThickness="{StaticResource ControlStrokeThickness}"/>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" Stroke="White" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
            <Rectangle x:Name="FocusVisualBlack" Stroke="Black" Margin="0" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- Default style for FlipView -->
  <Style TargetType="FlipView">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Black"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="TabNavigation" Value="Once"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel ArePanningSnapPointsRegular="True" Orientation="Horizontal" Background="Transparent"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="FlipView">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ScrollViewer
                  x:Name="ScrollingHost"
                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                  Padding="0"
                  BorderThickness="0">
                <ItemsPresenter/>
              </ScrollViewer>
              <Grid x:Name="ButtonLayer" Opacity="0.8">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button x:Name="PreviousButtonHorizontal" Grid.Column="0" Grid.Row="1" IsTabStop="False" Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource HorizontalPreviousFlipViewButtonStyle}"/>
                <Button x:Name="NextButtonHorizontal" Grid.Column="2" Grid.Row="1" IsTabStop="False" Margin="1" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource HorizontalNextFlipViewButtonStyle}"/>
                <Button x:Name="PreviousButtonVertical" Grid.Column="1" Grid.Row="0" IsTabStop="False" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource VerticalPreviousFlipViewButtonStyle}"/>
                <Button x:Name="NextButtonVertical" Grid.Column="1" Grid.Row="2" IsTabStop="False" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Style="{StaticResource VerticalNextFlipViewButtonStyle}"/>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for FlipViewItem -->
  <Style TargetType="FlipViewItem">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="FlipViewItem">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for GroupItem -->
  <Style TargetType="GroupItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="GroupItem">
          <Grid Margin="0,0,80,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Row="0"/>
            <ItemsControl x:Name="ItemsControl" Grid.Row="1" ItemsSource="{Binding GroupItems}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for Frame -->
  <Style TargetType="Frame">
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Frame">
          <Border x:Name="ClientArea" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
            <ContentPresenter ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default style for MediaPlayer -->
  <Style TargetType="MediaPlayer">
    <Setter Property="AutoPlay" Value="True"/>
    <Setter Property="Volume" Value="0.5"/>
    <Setter Property="Balance" Value="0"/>
    <Setter Property="PlaybackRate" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MediaPlayer">
          <Grid x:Name="RootMediaPlayerGrid" Background="Black" >
            <Grid.Resources>
              <Style x:Key="VolumeButtonStyle" TargetType="ToggleButton">
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Width" Value="26"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Grid x:Name="VolumeButtonGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <ColorAnimation Duration="0" To="#26FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="VolumeBars"/>
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="VolumeGlyph"/>
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="MuteGlyph"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VolumeButtonGrid" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MuteGrid"/>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VolumeBars"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Indeterminate"/>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="ellipse" Stroke="White" StrokeThickness="2" Fill="Transparent"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center">
                          <Grid x:Name="VolumeIconGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Path x:Name="VolumeBars" Data="M4.8159533,6 C4.8159533,3.9312 4.1677465,2.0603998 2.8720093,0.38820004 L3.3683355,0 C4.7732368,1.7261999 5.475009,3.7259998 5.475009,6 C5.475009,8.2788 4.7732368,10.277999 3.3683355,12 L2.8720093,11.6118 C4.1677465,9.9390001 4.8159533,8.0693998 4.8159533,6 M2.8451946,5.9999971 C2.8451946,4.123116 2.3386765,2.7184556 1.3269958,1.7866156 L1.8586029,1.3659973 C2.9841986,2.5078464 3.5469959,4.051713 3.5469959,5.9999971 C3.5469959,7.9482808 2.9841986,9.4945469 1.8586029,10.639997 L1.3269958,10.219979 C2.3386765,9.2827387 2.8451946,7.8762774 2.8451946,5.9999971 M1.957,6.0000019 C1.957,7.2661457 1.4743593,8.4398794 0.51043344,9.5170021 L0,9.1233568 C0.88461566,8.2622595 1.3265841,7.2199407 1.3265841,6.0000019 C1.3265841,4.7830634 0.88461566,3.743145 0,2.8772466 L0.51043344,2.4830017 C1.4743593,3.5607243 1.957,4.7338581 1.957,6.0000019" Fill="White" Stretch="Fill" UseLayoutRounding="False" Width="5.475" HorizontalAlignment="Right" Margin="0,7,7,7" StrokeDashCap="Round" StrokeEndLineCap="Square" StrokeStartLineCap="Round"/>
                            <Path x:Name="VolumeGlyph" Data="M6.0067792,10.0572 L2.3261013,7.0536003 L0,7.0536003 L0,3.0036001 L2.3261013,3.0036001 L6.0067792,0 z" Fill="White" Stretch="Fill" UseLayoutRounding="False" Margin="7,7.971,12.993,7.971"/>
                            <Grid x:Name="MuteGrid" Margin="5,5,0,4" Opacity="0">
                              <Path x:Name="MuteGlyph" Data="M5.0000105,2.0000062 L5.0000105,8.0000067 M7.8284273,2.1715729 C9.3905249,3.7336702 9.3905249,6.2663302 7.8284273,7.8284278 C6.2663302,9.3905249 3.7336702,9.3905249 2.1715732,7.8284278 C0.60947567,6.2663302 0.60947567,3.7336702 2.1715732,2.1715729 C3.7336702,0.60947579 6.2663302,0.60947561 7.8284273,2.1715729 z" HorizontalAlignment="Right" Height="7" Margin="0,0,5,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="7" Stroke="Red" StrokeStartLineCap="Round" StrokeEndLineCap="Round" RenderTransformOrigin="0.500001013278937,0.500000597350269" StrokeThickness="1.2">
                                <Path.RenderTransform>
                                  <CompositeTransform Rotation="45"/>
                                </Path.RenderTransform>
                              </Path>
                            </Grid>
                          </Grid>
                        </ContentPresenter>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="OverflowButtonStyle" TargetType="ToggleButton">
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Width" Value="26"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Grid x:Name="grid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <ColorAnimation Duration="0" To="#26FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse1" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse2" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse3" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse1" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse2" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse3" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0.65" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="grid" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked"/>
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Indeterminate"/>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="ellipse" Stroke="White" StrokeThickness="2" Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{TemplateBinding Width}">
                            <Ellipse x:Name="ellipse1" Fill="Transparent" Height="3" Stroke="White" StrokeThickness="2" Width="3"/>
                            <Ellipse x:Name="ellipse2" Fill="Transparent" Height="3" Stroke="White" StrokeThickness="2" Width="3" Margin="2,0,0,0"/>
                            <Ellipse x:Name="ellipse3" Fill="Transparent" Height="3" Stroke="White" StrokeThickness="2" Width="3" Margin="2,0,0,0"/>
                          </StackPanel>
                        </ContentPresenter>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>

              <Style x:Key="PlayPauseButtonStyle" TargetType="ToggleButton">
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Width" Value="26"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                      <Grid x:Name="grid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <ColorAnimation Duration="0" To="#26FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1" />
                                <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="PlayGlyph"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0.65" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="grid" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PauseGlyph" />
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlayGlyph"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PauseGlyph" />
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlayGlyph"/>
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="ellipse" Stroke="White" StrokeThickness="2" Fill="#00000000" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                          <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <StackPanel x:Name="PauseGlyph" Margin="0" Orientation="Horizontal"  HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                              <Rectangle x:Name="rectangle" Fill="White" Stroke="White" Width="3" Height="8" />
                              <Rectangle x:Name="rectangle1" Fill="White" Stroke="White" Width="3" Height="8"  Margin="3,0,0,0"/>
                            </StackPanel>
                            <Path x:Name="PlayGlyph" Data="M8,9 L8,19 L14.599998,13.95 z" Fill="#FFF4F4F5" Margin="3,0,0,0" Stretch="Fill" UseLayoutRounding="False" Width="7.5" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          </Grid>
                        </ContentPresenter>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="MediaPlayerTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14.667"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="Margin" Value="8,0,0,0"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="WordEllipsis"/>
                <Setter Property="Width" Value="260"/>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>

              <VisualStateGroup x:Name="ControlPanelVisibilityStates">
                <VisualState x:Name="ControlPanelFadeIn">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlPanelGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ControlPanelGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ControlPanelFadeOut">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="14"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlPanelGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ControlPanelGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="14"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ControlPanelVisible">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlPanelGrid" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ControlPanelHidden">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlPanelGrid"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="MediaStates">
                <VisualState x:Name="Playing">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BufferingProgressBar" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Failed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PlayButton">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="PlayButton">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <x:Boolean>True</x:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressTime" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BufferingProgressBar" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressSlider" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ErrorPanel">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ErrorPanel">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-20"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RightItemsPanel">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Buffering">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BufferingProgressBar" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="MediaType">
                <VisualState x:Name="Video">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HorizontalVolumeSlider">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AudioMuteButton">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Audio">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="RootMediaPlayerGrid" Storyboard.TargetProperty="Height" To="80" Duration="0:0:0"/>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VolumeButton">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="VerticalVolumeVisibilityStates">
                <VisualState x:Name="VerticalVolumeRequested">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="10"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="VerticalVolumeDismissed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="10"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="VerticalVolumeHidden">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="VerticalVolumeVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalVolumeSliderGrid">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="OverFlowStates">
                <VisualState x:Name="Open">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OverflowCommands">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OverflowCommands">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="OverflowCommands">
                      <EasingDoubleKeyFrame KeyTime="0" Value="10"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OverflowCommands">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OverflowCommands">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="OverflowCommands">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="10"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid x:Name="VideoGrid" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
              <MediaElement
                      x:Name="Media"
                      Source="{TemplateBinding Source}"
                      Stretch="{TemplateBinding Stretch}"
                      IsMuted="{TemplateBinding IsMuted}"
                      Volume="{TemplateBinding Volume}"
                      Balance="{TemplateBinding Balance}"
                      IsLooping="{TemplateBinding IsLooping}"
                      PlaybackRate="{TemplateBinding PlaybackRate}"
                      PosterSource="{TemplateBinding PosterSource}"
                            />
            </Grid>
            <Grid x:Name="ControlPanelGrid" Background="Black" Height="42" Grid.ColumnSpan="2" Margin="0" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" Opacity="1">
              <Grid.RenderTransform>
                <CompositeTransform/>
              </Grid.RenderTransform>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>

              <StackPanel x:Name="LeftItemsPanel" Orientation="Horizontal" >
                <Grid x:Name="LeftMargin" Width="8"/>
                <ToggleButton x:Name="PlayButton" Content="ToggleButton" Style="{StaticResource PlayPauseButtonStyle}" Margin="8,0,8,0" Visibility="Collapsed"/>
                <TextBlock x:Name="ProgressTime" TextWrapping="NoWrap" Text="0:00" HorizontalAlignment="Left" FontFamily="Segoe UI Light" FontSize="14.667" Foreground="White"  VerticalAlignment="Center" Margin="8,0,8,0" Visibility="Collapsed"/>
              </StackPanel>

              <Grid x:Name="MediaSliderGrid" Grid.Column="1">
                <ProgressBar x:Name="BufferingProgressBar" Height="10" VerticalAlignment="Center" IsIndeterminate="True" Margin="-24,0,-20,0"/>
                <Rectangle x:Name="DownloadProgressRectangle" MinWidth="80" HorizontalAlignment="Left" StrokeThickness="0" VerticalAlignment="Center" Height="11" Fill="#FF03415A" Margin="8,0,8,0" Visibility="Collapsed"/>
                <Slider x:Name="ProgressSlider" MinWidth="33" VerticalAlignment="Center" Value="0" IsThumbToolTipEnabled="False" Margin="8,0,8,0" Visibility="Collapsed"/>
              </Grid>

              <StackPanel x:Name="RightItemsPanel" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock x:Name="TotalMediaTime" TextWrapping="NoWrap" Text="0:00" HorizontalAlignment="Right" FontFamily="Segoe UI Light" FontSize="14.667" Foreground="White" VerticalAlignment="Center" Margin="8,0,8,0" Visibility="Collapsed"/>
                <ToggleButton x:Name="OverFlowCommandButton" Style="{StaticResource OverflowButtonStyle}" Content="ToggleButton" Margin="8,0,8,0" Visibility="Collapsed"/>
                <ToggleButton x:Name="VolumeButton" Style="{StaticResource VolumeButtonStyle}" VerticalAlignment="Center" Margin="8,0,8,0" Visibility="Collapsed"/>
                <ToggleButton x:Name="AudioMuteButton" Style="{StaticResource VolumeButtonStyle}" VerticalAlignment="Center" Margin="8,0,8,0" Visibility="Collapsed"/>
                <Slider x:Name="HorizontalVolumeSlider" Value="50" IsThumbToolTipEnabled="False" HorizontalAlignment="Center" VerticalAlignment="Center" Width="83" Visibility="Collapsed"/>
                <Grid x:Name="RightMargin" Width="8"/>
              </StackPanel>
              <Border x:Name="ErrorPanel" BorderBrush="Black" BorderThickness="1" Opacity="0" Background="Red" Visibility="Collapsed" Margin="80,7,0,5" Grid.ColumnSpan="3" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" MinWidth="180" MinHeight="28">
                <Border.RenderTransform>
                  <CompositeTransform TranslateX="-20"/>
                </Border.RenderTransform>
                <TextBlock TextWrapping="NoWrap" Style="{StaticResource MediaPlayerTextBlockStyle}" Width="Auto" VerticalAlignment="Center" Text="Error loading from server" Margin="20,0" MinWidth="140"/>
              </Border>
            </Grid>
            <Grid x:Name="OverflowCommands" HorizontalAlignment="Right" Width="100" Height="100" Background="Black" Margin="0,0,45,63" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom">
              <Grid.RenderTransform>
                <CompositeTransform/>
              </Grid.RenderTransform>
            </Grid>
            <Grid x:Name="VerticalVolumeSliderGrid" Margin="0,0,0,42" Background="Black" Grid.Column="1" Width="60" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Height="Auto" VerticalAlignment="Bottom" Visibility="Collapsed">
              <Grid.RenderTransform>
                <CompositeTransform TranslateY="0"/>
              </Grid.RenderTransform>
              <Slider x:Name="VerticalVolumeSlider" Value="50" Margin="0,14,0,14" Orientation="Vertical" HorizontalAlignment="Center" Height="120"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>

